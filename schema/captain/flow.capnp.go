// Code generated by capnpc-go. DO NOT EDIT.

package captain

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type BlockHeader struct{ capnp.Struct }

// BlockHeader_TypeID is the unique identifier for the type BlockHeader.
const BlockHeader_TypeID = 0xb52e2dc8e7887069

func NewBlockHeader(s *capnp.Segment) (BlockHeader, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return BlockHeader{st}, err
}

func NewRootBlockHeader(s *capnp.Segment) (BlockHeader, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2})
	return BlockHeader{st}, err
}

func ReadRootBlockHeader(msg *capnp.Message) (BlockHeader, error) {
	root, err := msg.RootPtr()
	return BlockHeader{root.Struct()}, err
}

func (s BlockHeader) String() string {
	str, _ := text.Marshal(0xb52e2dc8e7887069, s.Struct)
	return str
}

func (s BlockHeader) Height() uint64 {
	return s.Struct.Uint64(0)
}

func (s BlockHeader) SetHeight(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s BlockHeader) Nonce() uint64 {
	return s.Struct.Uint64(8)
}

func (s BlockHeader) SetNonce(v uint64) {
	s.Struct.SetUint64(8, v)
}

func (s BlockHeader) Timestamp() uint64 {
	return s.Struct.Uint64(16)
}

func (s BlockHeader) SetTimestamp(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s BlockHeader) Parent() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s BlockHeader) HasParent() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s BlockHeader) SetParent(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s BlockHeader) Payload() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s BlockHeader) HasPayload() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s BlockHeader) SetPayload(v []byte) error {
	return s.Struct.SetData(1, v)
}

// BlockHeader_List is a list of BlockHeader.
type BlockHeader_List struct{ capnp.List }

// NewBlockHeader creates a new list of BlockHeader.
func NewBlockHeader_List(s *capnp.Segment, sz int32) (BlockHeader_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 2}, sz)
	return BlockHeader_List{l}, err
}

func (s BlockHeader_List) At(i int) BlockHeader { return BlockHeader{s.List.Struct(i)} }

func (s BlockHeader_List) Set(i int, v BlockHeader) error { return s.List.SetStruct(i, v.Struct) }

func (s BlockHeader_List) String() string {
	str, _ := text.MarshalList(0xb52e2dc8e7887069, s.List)
	return str
}

// BlockHeader_Promise is a wrapper for a BlockHeader promised by a client call.
type BlockHeader_Promise struct{ *capnp.Pipeline }

func (p BlockHeader_Promise) Struct() (BlockHeader, error) {
	s, err := p.Pipeline.Struct()
	return BlockHeader{s}, err
}

const schema_cf3ad8085685b22d = "x\xda4\xcb?J\x03A\x18\x86\xf1\xf7\xfdfb\x12" +
	"$\xc5\x90\xeds\x82\x04\xff`a@\"\xa9,\xfd," +
	"\xec\x87d4\xc1dw\x88\x0b*(\"$\xb0\x85\x82" +
	"\x82\x85\x9dw\x10l<\x81\x9d\xad7\xf0\x18+)\xb6" +
	"|~\xf0lMx(\xdb\xb5\xf7\x06\xa0\xe3\xdaF9" +
	"\x8d\xc5\xdfw\xb7\xf7\x09\xdd\xa4)\xbb\x1f\xab\xd3\xc6o" +
	"\xff\x075\xa9\x03\xed=\xfb\xd5>\xb0u`w\xdfv" +
	"\x88\x12\xcd\xf2l\x96]\xf5F>2\x8d\xfd\xe1,\x1b" +
	"]\x0c\x8e\x82\x1f\x87\xc51\xa9\x89\xb1\x80%\xe0\xee\xfa" +
	"\x80^\x1b\xeaR\xe8\xc8\x84k|\xd8\x01\xf4\xd6P\x0b" +
	"\xa1\x13I(\x80[\x9d\x00\xba4\xd4g!MB\x03" +
	"\xb8\xa7\xf5]\x18\xea\xab\xd0Y&\xb4\x80{\x19\x02\xfa" +
	"h\xa8o\xc2\xc1$L\xcf'9\x9b\x106\xc1N\x9a" +
	"\xa5\xa3PU\x99O\xe7\xe12\xf7s0V6\x88~" +
	"\x11\xd2\x9c-\x08[\xe0}\xf47\xb3\xcc\x8f\xab\xfe\x0f" +
	"\x00\x00\xff\xff\xe7}7\xed"

func init() {
	schemas.Register(schema_cf3ad8085685b22d,
		0xb52e2dc8e7887069)
}
