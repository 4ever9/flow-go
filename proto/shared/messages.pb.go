// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package shared

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Vote int32

const (
	Vote_REJECT  Vote = 0
	Vote_APPROVE Vote = 1
)

var Vote_name = map[int32]string{
	0: "REJECT",
	1: "APPROVE",
}

var Vote_value = map[string]int32{
	"REJECT":  0,
	"APPROVE": 1,
}

func (x Vote) String() string {
	return proto.EnumName(Vote_name, int32(x))
}

func (Vote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

type TransactionRegister_AccessMode int32

const (
	TransactionRegister_CREATE TransactionRegister_AccessMode = 0
	// Allows read-only access to the contents of the register as they were at the end of the previous block.
	TransactionRegister_SNAPSHOT_READ TransactionRegister_AccessMode = 1
	// Allows read-only access to the contents of the register as they were after all previous transactions
	// have been processed (including those in the same block).
	TransactionRegister_CONFIRMED_READ TransactionRegister_AccessMode = 2
	// Only valid for Balance Registers. Allows Snapshot Read access to the Register, plus the ability to
	// issue deferred additions on that register.
	TransactionRegister_DEFERRED_WRITE TransactionRegister_AccessMode = 3
	// Allows exclusive read/write access to the contents of the register; all writes from previous transactions
	// will be visible, and all writes made by this transaction will be visible to all subsequent transactions
	// (formally: Serializability).
	TransactionRegister_READ_WRITE TransactionRegister_AccessMode = 4
)

var TransactionRegister_AccessMode_name = map[int32]string{
	0: "CREATE",
	1: "SNAPSHOT_READ",
	2: "CONFIRMED_READ",
	3: "DEFERRED_WRITE",
	4: "READ_WRITE",
}

var TransactionRegister_AccessMode_value = map[string]int32{
	"CREATE":         0,
	"SNAPSHOT_READ":  1,
	"CONFIRMED_READ": 2,
	"DEFERRED_WRITE": 3,
	"READ_WRITE":     4,
}

func (x TransactionRegister_AccessMode) String() string {
	return proto.EnumName(TransactionRegister_AccessMode_name, int32(x))
}

func (TransactionRegister_AccessMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11, 0}
}

type TransactionRegister_Type int32

const (
	TransactionRegister_SIMPLE  TransactionRegister_Type = 0
	TransactionRegister_CHUNK   TransactionRegister_Type = 1
	TransactionRegister_BALANCE TransactionRegister_Type = 2
)

var TransactionRegister_Type_name = map[int32]string{
	0: "SIMPLE",
	1: "CHUNK",
	2: "BALANCE",
}

var TransactionRegister_Type_value = map[string]int32{
	"SIMPLE":  0,
	"CHUNK":   1,
	"BALANCE": 2,
}

func (x TransactionRegister_Type) String() string {
	return proto.EnumName(TransactionRegister_Type_name, int32(x))
}

func (TransactionRegister_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11, 1}
}

type Inventory_Item_Type int32

const (
	Inventory_Item_TRANSACTION Inventory_Item_Type = 0
	Inventory_Item_BLOCK       Inventory_Item_Type = 1
)

var Inventory_Item_Type_name = map[int32]string{
	0: "TRANSACTION",
	1: "BLOCK",
}

var Inventory_Item_Type_value = map[string]int32{
	"TRANSACTION": 0,
	"BLOCK":       1,
}

func (x Inventory_Item_Type) String() string {
	return proto.EnumName(Inventory_Item_Type_name, int32(x))
}

func (Inventory_Item_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{12, 0, 0}
}

// Message models a single message that is supposed to get exchanged by the gossip network
type GossipMessage struct {
	// Types that are valid to be assigned to Payload:
	//	*GossipMessage_SignedCollectionHash
	//	*GossipMessage_Collection
	//	*GossipMessage_Block
	//	*GossipMessage_BlockSeal
	//	*GossipMessage_IntermediateRegisters
	//	*GossipMessage_ExecutionReceipt
	//	*GossipMessage_ResultApproval
	//	*GossipMessage_Transaction
	//	*GossipMessage_SignedTransaction
	//	*GossipMessage_Register
	//	*GossipMessage_TransactionRegister
	//	*GossipMessage_Inventory
	//	*GossipMessage_InvalidExecutionReceiptChallenge
	//	*GossipMessage_StateTransition
	//	*GossipMessage_SignedStateTransition
	//	*GossipMessage_FinalizedStateTransition
	//	*GossipMessage_Vote
	//	*GossipMessage_StateTransitionVote
	Payload              isGossipMessage_Payload `protobuf_oneof:"Payload"`
	Method               string                  `protobuf:"bytes,19,opt,name=Method,proto3" json:"Method,omitempty"`
	Recipients           []string                `protobuf:"bytes,20,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
	Sender               string                  `protobuf:"bytes,21,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Path                 []string                `protobuf:"bytes,22,rep,name=Path,proto3" json:"Path,omitempty"`
	TTL                  uint64                  `protobuf:"varint,23,opt,name=TTL,proto3" json:"TTL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GossipMessage) Reset()         { *m = GossipMessage{} }
func (m *GossipMessage) String() string { return proto.CompactTextString(m) }
func (*GossipMessage) ProtoMessage()    {}
func (*GossipMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *GossipMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GossipMessage.Unmarshal(m, b)
}
func (m *GossipMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GossipMessage.Marshal(b, m, deterministic)
}
func (m *GossipMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GossipMessage.Merge(m, src)
}
func (m *GossipMessage) XXX_Size() int {
	return xxx_messageInfo_GossipMessage.Size(m)
}
func (m *GossipMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GossipMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GossipMessage proto.InternalMessageInfo

type isGossipMessage_Payload interface {
	isGossipMessage_Payload()
}

type GossipMessage_SignedCollectionHash struct {
	SignedCollectionHash *SignedCollectionHash `protobuf:"bytes,1,opt,name=signedCollectionHash,proto3,oneof"`
}

type GossipMessage_Collection struct {
	Collection *Collection `protobuf:"bytes,2,opt,name=collection,proto3,oneof"`
}

type GossipMessage_Block struct {
	Block *Block `protobuf:"bytes,3,opt,name=block,proto3,oneof"`
}

type GossipMessage_BlockSeal struct {
	BlockSeal *BlockSeal `protobuf:"bytes,4,opt,name=blockSeal,proto3,oneof"`
}

type GossipMessage_IntermediateRegisters struct {
	IntermediateRegisters *IntermediateRegisters `protobuf:"bytes,5,opt,name=intermediateRegisters,proto3,oneof"`
}

type GossipMessage_ExecutionReceipt struct {
	ExecutionReceipt *ExecutionReceipt `protobuf:"bytes,6,opt,name=executionReceipt,proto3,oneof"`
}

type GossipMessage_ResultApproval struct {
	ResultApproval *ResultApproval `protobuf:"bytes,7,opt,name=resultApproval,proto3,oneof"`
}

type GossipMessage_Transaction struct {
	Transaction *Transaction `protobuf:"bytes,8,opt,name=transaction,proto3,oneof"`
}

type GossipMessage_SignedTransaction struct {
	SignedTransaction *SignedTransaction `protobuf:"bytes,9,opt,name=signedTransaction,proto3,oneof"`
}

type GossipMessage_Register struct {
	Register *Register `protobuf:"bytes,10,opt,name=register,proto3,oneof"`
}

type GossipMessage_TransactionRegister struct {
	TransactionRegister *TransactionRegister `protobuf:"bytes,11,opt,name=transactionRegister,proto3,oneof"`
}

type GossipMessage_Inventory struct {
	Inventory *Inventory `protobuf:"bytes,12,opt,name=inventory,proto3,oneof"`
}

type GossipMessage_InvalidExecutionReceiptChallenge struct {
	InvalidExecutionReceiptChallenge *InvalidExecutionReceiptChallenge `protobuf:"bytes,13,opt,name=invalidExecutionReceiptChallenge,proto3,oneof"`
}

type GossipMessage_StateTransition struct {
	StateTransition *StateTransition `protobuf:"bytes,14,opt,name=stateTransition,proto3,oneof"`
}

type GossipMessage_SignedStateTransition struct {
	SignedStateTransition *SignedStateTransition `protobuf:"bytes,15,opt,name=signedStateTransition,proto3,oneof"`
}

type GossipMessage_FinalizedStateTransition struct {
	FinalizedStateTransition *FinalizedStateTransition `protobuf:"bytes,16,opt,name=finalizedStateTransition,proto3,oneof"`
}

type GossipMessage_Vote struct {
	Vote Vote `protobuf:"varint,17,opt,name=vote,proto3,enum=bamboo.shared.Vote,oneof"`
}

type GossipMessage_StateTransitionVote struct {
	StateTransitionVote *StateTransitionVote `protobuf:"bytes,18,opt,name=stateTransitionVote,proto3,oneof"`
}

func (*GossipMessage_SignedCollectionHash) isGossipMessage_Payload() {}

func (*GossipMessage_Collection) isGossipMessage_Payload() {}

func (*GossipMessage_Block) isGossipMessage_Payload() {}

func (*GossipMessage_BlockSeal) isGossipMessage_Payload() {}

func (*GossipMessage_IntermediateRegisters) isGossipMessage_Payload() {}

func (*GossipMessage_ExecutionReceipt) isGossipMessage_Payload() {}

func (*GossipMessage_ResultApproval) isGossipMessage_Payload() {}

func (*GossipMessage_Transaction) isGossipMessage_Payload() {}

func (*GossipMessage_SignedTransaction) isGossipMessage_Payload() {}

func (*GossipMessage_Register) isGossipMessage_Payload() {}

func (*GossipMessage_TransactionRegister) isGossipMessage_Payload() {}

func (*GossipMessage_Inventory) isGossipMessage_Payload() {}

func (*GossipMessage_InvalidExecutionReceiptChallenge) isGossipMessage_Payload() {}

func (*GossipMessage_StateTransition) isGossipMessage_Payload() {}

func (*GossipMessage_SignedStateTransition) isGossipMessage_Payload() {}

func (*GossipMessage_FinalizedStateTransition) isGossipMessage_Payload() {}

func (*GossipMessage_Vote) isGossipMessage_Payload() {}

func (*GossipMessage_StateTransitionVote) isGossipMessage_Payload() {}

func (m *GossipMessage) GetPayload() isGossipMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GossipMessage) GetSignedCollectionHash() *SignedCollectionHash {
	if x, ok := m.GetPayload().(*GossipMessage_SignedCollectionHash); ok {
		return x.SignedCollectionHash
	}
	return nil
}

func (m *GossipMessage) GetCollection() *Collection {
	if x, ok := m.GetPayload().(*GossipMessage_Collection); ok {
		return x.Collection
	}
	return nil
}

func (m *GossipMessage) GetBlock() *Block {
	if x, ok := m.GetPayload().(*GossipMessage_Block); ok {
		return x.Block
	}
	return nil
}

func (m *GossipMessage) GetBlockSeal() *BlockSeal {
	if x, ok := m.GetPayload().(*GossipMessage_BlockSeal); ok {
		return x.BlockSeal
	}
	return nil
}

func (m *GossipMessage) GetIntermediateRegisters() *IntermediateRegisters {
	if x, ok := m.GetPayload().(*GossipMessage_IntermediateRegisters); ok {
		return x.IntermediateRegisters
	}
	return nil
}

func (m *GossipMessage) GetExecutionReceipt() *ExecutionReceipt {
	if x, ok := m.GetPayload().(*GossipMessage_ExecutionReceipt); ok {
		return x.ExecutionReceipt
	}
	return nil
}

func (m *GossipMessage) GetResultApproval() *ResultApproval {
	if x, ok := m.GetPayload().(*GossipMessage_ResultApproval); ok {
		return x.ResultApproval
	}
	return nil
}

func (m *GossipMessage) GetTransaction() *Transaction {
	if x, ok := m.GetPayload().(*GossipMessage_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (m *GossipMessage) GetSignedTransaction() *SignedTransaction {
	if x, ok := m.GetPayload().(*GossipMessage_SignedTransaction); ok {
		return x.SignedTransaction
	}
	return nil
}

func (m *GossipMessage) GetRegister() *Register {
	if x, ok := m.GetPayload().(*GossipMessage_Register); ok {
		return x.Register
	}
	return nil
}

func (m *GossipMessage) GetTransactionRegister() *TransactionRegister {
	if x, ok := m.GetPayload().(*GossipMessage_TransactionRegister); ok {
		return x.TransactionRegister
	}
	return nil
}

func (m *GossipMessage) GetInventory() *Inventory {
	if x, ok := m.GetPayload().(*GossipMessage_Inventory); ok {
		return x.Inventory
	}
	return nil
}

func (m *GossipMessage) GetInvalidExecutionReceiptChallenge() *InvalidExecutionReceiptChallenge {
	if x, ok := m.GetPayload().(*GossipMessage_InvalidExecutionReceiptChallenge); ok {
		return x.InvalidExecutionReceiptChallenge
	}
	return nil
}

func (m *GossipMessage) GetStateTransition() *StateTransition {
	if x, ok := m.GetPayload().(*GossipMessage_StateTransition); ok {
		return x.StateTransition
	}
	return nil
}

func (m *GossipMessage) GetSignedStateTransition() *SignedStateTransition {
	if x, ok := m.GetPayload().(*GossipMessage_SignedStateTransition); ok {
		return x.SignedStateTransition
	}
	return nil
}

func (m *GossipMessage) GetFinalizedStateTransition() *FinalizedStateTransition {
	if x, ok := m.GetPayload().(*GossipMessage_FinalizedStateTransition); ok {
		return x.FinalizedStateTransition
	}
	return nil
}

func (m *GossipMessage) GetVote() Vote {
	if x, ok := m.GetPayload().(*GossipMessage_Vote); ok {
		return x.Vote
	}
	return Vote_REJECT
}

func (m *GossipMessage) GetStateTransitionVote() *StateTransitionVote {
	if x, ok := m.GetPayload().(*GossipMessage_StateTransitionVote); ok {
		return x.StateTransitionVote
	}
	return nil
}

func (m *GossipMessage) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *GossipMessage) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *GossipMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *GossipMessage) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *GossipMessage) GetTTL() uint64 {
	if m != nil {
		return m.TTL
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GossipMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GossipMessage_SignedCollectionHash)(nil),
		(*GossipMessage_Collection)(nil),
		(*GossipMessage_Block)(nil),
		(*GossipMessage_BlockSeal)(nil),
		(*GossipMessage_IntermediateRegisters)(nil),
		(*GossipMessage_ExecutionReceipt)(nil),
		(*GossipMessage_ResultApproval)(nil),
		(*GossipMessage_Transaction)(nil),
		(*GossipMessage_SignedTransaction)(nil),
		(*GossipMessage_Register)(nil),
		(*GossipMessage_TransactionRegister)(nil),
		(*GossipMessage_Inventory)(nil),
		(*GossipMessage_InvalidExecutionReceiptChallenge)(nil),
		(*GossipMessage_StateTransition)(nil),
		(*GossipMessage_SignedStateTransition)(nil),
		(*GossipMessage_FinalizedStateTransition)(nil),
		(*GossipMessage_Vote)(nil),
		(*GossipMessage_StateTransitionVote)(nil),
	}
}

type SignedCollectionHash struct {
	CollectionHash       []byte   `protobuf:"bytes,1,opt,name=collectionHash,proto3" json:"collectionHash,omitempty"`
	Signatures           [][]byte `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedCollectionHash) Reset()         { *m = SignedCollectionHash{} }
func (m *SignedCollectionHash) String() string { return proto.CompactTextString(m) }
func (*SignedCollectionHash) ProtoMessage()    {}
func (*SignedCollectionHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}

func (m *SignedCollectionHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedCollectionHash.Unmarshal(m, b)
}
func (m *SignedCollectionHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedCollectionHash.Marshal(b, m, deterministic)
}
func (m *SignedCollectionHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedCollectionHash.Merge(m, src)
}
func (m *SignedCollectionHash) XXX_Size() int {
	return xxx_messageInfo_SignedCollectionHash.Size(m)
}
func (m *SignedCollectionHash) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedCollectionHash.DiscardUnknown(m)
}

var xxx_messageInfo_SignedCollectionHash proto.InternalMessageInfo

func (m *SignedCollectionHash) GetCollectionHash() []byte {
	if m != nil {
		return m.CollectionHash
	}
	return nil
}

func (m *SignedCollectionHash) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Collection struct {
	Transactions         []*SignedTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	FoundationBlockHash  []byte               `protobuf:"bytes,2,opt,name=foundationBlockHash,proto3" json:"foundationBlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}

func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (m *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(m, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetTransactions() []*SignedTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Collection) GetFoundationBlockHash() []byte {
	if m != nil {
		return m.FoundationBlockHash
	}
	return nil
}

type Block struct {
	ChainID                string                  `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Height                 uint64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	PreviousBlockHash      []byte                  `protobuf:"bytes,3,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	Timestamp              *timestamp.Timestamp    `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SignedCollectionHashes []*SignedCollectionHash `protobuf:"bytes,5,rep,name=signedCollectionHashes,proto3" json:"signedCollectionHashes,omitempty"`
	BlockSeals             []*BlockSeal            `protobuf:"bytes,6,rep,name=blockSeals,proto3" json:"blockSeals,omitempty"`
	Signatures             [][]byte                `protobuf:"bytes,7,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *Block) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetPreviousBlockHash() []byte {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *Block) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Block) GetSignedCollectionHashes() []*SignedCollectionHash {
	if m != nil {
		return m.SignedCollectionHashes
	}
	return nil
}

func (m *Block) GetBlockSeals() []*BlockSeal {
	if m != nil {
		return m.BlockSeals
	}
	return nil
}

func (m *Block) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// When computation results for past blocks become available, a corresponding execution receipt
// (issued by execution nodes) and result approval (issued by access nodes) is issued.
//
// We want to persist the execution receipt (assuming the results are consistent) and
// the result approval in subsequent blocks. This step is called _sealing a block_.
//
// This is a sub-message for a block seal. This will allow us later to (optionally) seal
// multiple past blocks in one new block without revising the structure.
//
type BlockSeal struct {
	BlockHash                  []byte   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	ExecutionReceiptHash       []byte   `protobuf:"bytes,2,opt,name=executionReceiptHash,proto3" json:"executionReceiptHash,omitempty"`
	ExecutionReceiptSignatures [][]byte `protobuf:"bytes,3,rep,name=executionReceiptSignatures,proto3" json:"executionReceiptSignatures,omitempty"`
	ResultApprovalSignatures   [][]byte `protobuf:"bytes,4,rep,name=resultApprovalSignatures,proto3" json:"resultApprovalSignatures,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *BlockSeal) Reset()         { *m = BlockSeal{} }
func (m *BlockSeal) String() string { return proto.CompactTextString(m) }
func (*BlockSeal) ProtoMessage()    {}
func (*BlockSeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4}
}

func (m *BlockSeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSeal.Unmarshal(m, b)
}
func (m *BlockSeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSeal.Marshal(b, m, deterministic)
}
func (m *BlockSeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSeal.Merge(m, src)
}
func (m *BlockSeal) XXX_Size() int {
	return xxx_messageInfo_BlockSeal.Size(m)
}
func (m *BlockSeal) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSeal.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSeal proto.InternalMessageInfo

func (m *BlockSeal) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptHash() []byte {
	if m != nil {
		return m.ExecutionReceiptHash
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptSignatures() [][]byte {
	if m != nil {
		return m.ExecutionReceiptSignatures
	}
	return nil
}

func (m *BlockSeal) GetResultApprovalSignatures() [][]byte {
	if m != nil {
		return m.ResultApprovalSignatures
	}
	return nil
}

type IntermediateRegisters struct {
	TransactionHash []byte `protobuf:"bytes,1,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	// the register changes at the end of computing the transaction
	Registers            []*Register `protobuf:"bytes,2,rep,name=registers,proto3" json:"registers,omitempty"`
	ComputeUsed          uint64      `protobuf:"varint,3,opt,name=computeUsed,proto3" json:"computeUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IntermediateRegisters) Reset()         { *m = IntermediateRegisters{} }
func (m *IntermediateRegisters) String() string { return proto.CompactTextString(m) }
func (*IntermediateRegisters) ProtoMessage()    {}
func (*IntermediateRegisters) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{5}
}

func (m *IntermediateRegisters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntermediateRegisters.Unmarshal(m, b)
}
func (m *IntermediateRegisters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntermediateRegisters.Marshal(b, m, deterministic)
}
func (m *IntermediateRegisters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntermediateRegisters.Merge(m, src)
}
func (m *IntermediateRegisters) XXX_Size() int {
	return xxx_messageInfo_IntermediateRegisters.Size(m)
}
func (m *IntermediateRegisters) XXX_DiscardUnknown() {
	xxx_messageInfo_IntermediateRegisters.DiscardUnknown(m)
}

var xxx_messageInfo_IntermediateRegisters proto.InternalMessageInfo

func (m *IntermediateRegisters) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *IntermediateRegisters) GetRegisters() []*Register {
	if m != nil {
		return m.Registers
	}
	return nil
}

func (m *IntermediateRegisters) GetComputeUsed() uint64 {
	if m != nil {
		return m.ComputeUsed
	}
	return 0
}

// Generated by each execution node individually; submitted to access nodes.
type ExecutionReceipt struct {
	PreviousReceiptHash       []byte                   `protobuf:"bytes,1,opt,name=previousReceiptHash,proto3" json:"previousReceiptHash,omitempty"`
	BlockHash                 []byte                   `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	InitialRegisters          []*Register              `protobuf:"bytes,3,rep,name=initialRegisters,proto3" json:"initialRegisters,omitempty"`
	IntermediateRegistersList []*IntermediateRegisters `protobuf:"bytes,4,rep,name=intermediateRegistersList,proto3" json:"intermediateRegistersList,omitempty"`
	Signatures                [][]byte                 `protobuf:"bytes,5,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *ExecutionReceipt) Reset()         { *m = ExecutionReceipt{} }
func (m *ExecutionReceipt) String() string { return proto.CompactTextString(m) }
func (*ExecutionReceipt) ProtoMessage()    {}
func (*ExecutionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{6}
}

func (m *ExecutionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionReceipt.Unmarshal(m, b)
}
func (m *ExecutionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionReceipt.Marshal(b, m, deterministic)
}
func (m *ExecutionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionReceipt.Merge(m, src)
}
func (m *ExecutionReceipt) XXX_Size() int {
	return xxx_messageInfo_ExecutionReceipt.Size(m)
}
func (m *ExecutionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionReceipt proto.InternalMessageInfo

func (m *ExecutionReceipt) GetPreviousReceiptHash() []byte {
	if m != nil {
		return m.PreviousReceiptHash
	}
	return nil
}

func (m *ExecutionReceipt) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ExecutionReceipt) GetInitialRegisters() []*Register {
	if m != nil {
		return m.InitialRegisters
	}
	return nil
}

func (m *ExecutionReceipt) GetIntermediateRegistersList() []*IntermediateRegisters {
	if m != nil {
		return m.IntermediateRegistersList
	}
	return nil
}

func (m *ExecutionReceipt) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// Issued by the access nodes once they agree with the values
// for the computation that they were assigned to check.
type ResultApproval struct {
	BlockHeight             uint64   `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	ExecutionReceiptHash    []byte   `protobuf:"bytes,2,opt,name=executionReceiptHash,proto3" json:"executionReceiptHash,omitempty"`
	ResultApprovalSignature []byte   `protobuf:"bytes,3,opt,name=resultApprovalSignature,proto3" json:"resultApprovalSignature,omitempty"`
	Proof                   uint64   `protobuf:"varint,4,opt,name=proof,proto3" json:"proof,omitempty"`
	Signature               []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ResultApproval) Reset()         { *m = ResultApproval{} }
func (m *ResultApproval) String() string { return proto.CompactTextString(m) }
func (*ResultApproval) ProtoMessage()    {}
func (*ResultApproval) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{7}
}

func (m *ResultApproval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultApproval.Unmarshal(m, b)
}
func (m *ResultApproval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultApproval.Marshal(b, m, deterministic)
}
func (m *ResultApproval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultApproval.Merge(m, src)
}
func (m *ResultApproval) XXX_Size() int {
	return xxx_messageInfo_ResultApproval.Size(m)
}
func (m *ResultApproval) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultApproval.DiscardUnknown(m)
}

var xxx_messageInfo_ResultApproval proto.InternalMessageInfo

func (m *ResultApproval) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ResultApproval) GetExecutionReceiptHash() []byte {
	if m != nil {
		return m.ExecutionReceiptHash
	}
	return nil
}

func (m *ResultApproval) GetResultApprovalSignature() []byte {
	if m != nil {
		return m.ResultApprovalSignature
	}
	return nil
}

func (m *ResultApproval) GetProof() uint64 {
	if m != nil {
		return m.Proof
	}
	return 0
}

func (m *ResultApproval) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Transaction struct {
	Script               []byte                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Nonce                uint64                 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Registers            []*TransactionRegister `protobuf:"bytes,3,rep,name=registers,proto3" json:"registers,omitempty"`
	Chunks               [][]byte               `protobuf:"bytes,4,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{8}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetRegisters() []*TransactionRegister {
	if m != nil {
		return m.Registers
	}
	return nil
}

func (m *Transaction) GetChunks() [][]byte {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type SignedTransaction struct {
	Transaction          *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	ScriptSignatures     [][]byte     `protobuf:"bytes,2,rep,name=scriptSignatures,proto3" json:"scriptSignatures,omitempty"`
	PayerSignature       []byte       `protobuf:"bytes,3,opt,name=payerSignature,proto3" json:"payerSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignedTransaction) Reset()         { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()    {}
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{9}
}

func (m *SignedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTransaction.Unmarshal(m, b)
}
func (m *SignedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTransaction.Marshal(b, m, deterministic)
}
func (m *SignedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTransaction.Merge(m, src)
}
func (m *SignedTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedTransaction.Size(m)
}
func (m *SignedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTransaction proto.InternalMessageInfo

func (m *SignedTransaction) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *SignedTransaction) GetScriptSignatures() [][]byte {
	if m != nil {
		return m.ScriptSignatures
	}
	return nil
}

func (m *SignedTransaction) GetPayerSignature() []byte {
	if m != nil {
		return m.PayerSignature
	}
	return nil
}

type Register struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Register) Reset()         { *m = Register{} }
func (m *Register) String() string { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()    {}
func (*Register) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{10}
}

func (m *Register) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Register.Unmarshal(m, b)
}
func (m *Register) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Register.Marshal(b, m, deterministic)
}
func (m *Register) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Register.Merge(m, src)
}
func (m *Register) XXX_Size() int {
	return xxx_messageInfo_Register.Size(m)
}
func (m *Register) XXX_DiscardUnknown() {
	xxx_messageInfo_Register.DiscardUnknown(m)
}

var xxx_messageInfo_Register proto.InternalMessageInfo

func (m *Register) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Register) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type TransactionRegister struct {
	Type                 TransactionRegister_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=bamboo.shared.TransactionRegister_Type" json:"type,omitempty"`
	AccessMode           TransactionRegister_AccessMode   `protobuf:"varint,2,opt,name=accessMode,proto3,enum=bamboo.shared.TransactionRegister_AccessMode" json:"accessMode,omitempty"`
	Id                   []byte                           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Keys                 []*TransactionRegister_KeyWeight `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *TransactionRegister) Reset()         { *m = TransactionRegister{} }
func (m *TransactionRegister) String() string { return proto.CompactTextString(m) }
func (*TransactionRegister) ProtoMessage()    {}
func (*TransactionRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11}
}

func (m *TransactionRegister) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRegister.Unmarshal(m, b)
}
func (m *TransactionRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRegister.Marshal(b, m, deterministic)
}
func (m *TransactionRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRegister.Merge(m, src)
}
func (m *TransactionRegister) XXX_Size() int {
	return xxx_messageInfo_TransactionRegister.Size(m)
}
func (m *TransactionRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRegister.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRegister proto.InternalMessageInfo

func (m *TransactionRegister) GetType() TransactionRegister_Type {
	if m != nil {
		return m.Type
	}
	return TransactionRegister_SIMPLE
}

func (m *TransactionRegister) GetAccessMode() TransactionRegister_AccessMode {
	if m != nil {
		return m.AccessMode
	}
	return TransactionRegister_CREATE
}

func (m *TransactionRegister) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TransactionRegister) GetKeys() []*TransactionRegister_KeyWeight {
	if m != nil {
		return m.Keys
	}
	return nil
}

type TransactionRegister_KeyWeight struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Weight               float64  `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRegister_KeyWeight) Reset()         { *m = TransactionRegister_KeyWeight{} }
func (m *TransactionRegister_KeyWeight) String() string { return proto.CompactTextString(m) }
func (*TransactionRegister_KeyWeight) ProtoMessage()    {}
func (*TransactionRegister_KeyWeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11, 0}
}

func (m *TransactionRegister_KeyWeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRegister_KeyWeight.Unmarshal(m, b)
}
func (m *TransactionRegister_KeyWeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRegister_KeyWeight.Marshal(b, m, deterministic)
}
func (m *TransactionRegister_KeyWeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRegister_KeyWeight.Merge(m, src)
}
func (m *TransactionRegister_KeyWeight) XXX_Size() int {
	return xxx_messageInfo_TransactionRegister_KeyWeight.Size(m)
}
func (m *TransactionRegister_KeyWeight) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRegister_KeyWeight.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRegister_KeyWeight proto.InternalMessageInfo

func (m *TransactionRegister_KeyWeight) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TransactionRegister_KeyWeight) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Inventory struct {
	Items                []*Inventory_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Inventory) Reset()         { *m = Inventory{} }
func (m *Inventory) String() string { return proto.CompactTextString(m) }
func (*Inventory) ProtoMessage()    {}
func (*Inventory) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{12}
}

func (m *Inventory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory.Unmarshal(m, b)
}
func (m *Inventory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory.Marshal(b, m, deterministic)
}
func (m *Inventory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory.Merge(m, src)
}
func (m *Inventory) XXX_Size() int {
	return xxx_messageInfo_Inventory.Size(m)
}
func (m *Inventory) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory proto.InternalMessageInfo

func (m *Inventory) GetItems() []*Inventory_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type Inventory_Item struct {
	Type                 Inventory_Item_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bamboo.shared.Inventory_Item_Type" json:"type,omitempty"`
	Hash                 []byte              `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Inventory_Item) Reset()         { *m = Inventory_Item{} }
func (m *Inventory_Item) String() string { return proto.CompactTextString(m) }
func (*Inventory_Item) ProtoMessage()    {}
func (*Inventory_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{12, 0}
}

func (m *Inventory_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inventory_Item.Unmarshal(m, b)
}
func (m *Inventory_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inventory_Item.Marshal(b, m, deterministic)
}
func (m *Inventory_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inventory_Item.Merge(m, src)
}
func (m *Inventory_Item) XXX_Size() int {
	return xxx_messageInfo_Inventory_Item.Size(m)
}
func (m *Inventory_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Inventory_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Inventory_Item proto.InternalMessageInfo

func (m *Inventory_Item) GetType() Inventory_Item_Type {
	if m != nil {
		return m.Type
	}
	return Inventory_Item_TRANSACTION
}

func (m *Inventory_Item) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type InvalidExecutionReceiptChallenge struct {
	ExecutionReceiptHash      []byte                   `protobuf:"bytes,1,opt,name=executionReceiptHash,proto3" json:"executionReceiptHash,omitempty"`
	ExecutionReceiptSignature []byte                   `protobuf:"bytes,2,opt,name=executionReceiptSignature,proto3" json:"executionReceiptSignature,omitempty"`
	PartIndex                 uint64                   `protobuf:"varint,3,opt,name=partIndex,proto3" json:"partIndex,omitempty"`
	PartTransactions          []*IntermediateRegisters `protobuf:"bytes,4,rep,name=partTransactions,proto3" json:"partTransactions,omitempty"`
	Signature                 []byte                   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *InvalidExecutionReceiptChallenge) Reset()         { *m = InvalidExecutionReceiptChallenge{} }
func (m *InvalidExecutionReceiptChallenge) String() string { return proto.CompactTextString(m) }
func (*InvalidExecutionReceiptChallenge) ProtoMessage()    {}
func (*InvalidExecutionReceiptChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{13}
}

func (m *InvalidExecutionReceiptChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidExecutionReceiptChallenge.Unmarshal(m, b)
}
func (m *InvalidExecutionReceiptChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidExecutionReceiptChallenge.Marshal(b, m, deterministic)
}
func (m *InvalidExecutionReceiptChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidExecutionReceiptChallenge.Merge(m, src)
}
func (m *InvalidExecutionReceiptChallenge) XXX_Size() int {
	return xxx_messageInfo_InvalidExecutionReceiptChallenge.Size(m)
}
func (m *InvalidExecutionReceiptChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidExecutionReceiptChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidExecutionReceiptChallenge proto.InternalMessageInfo

func (m *InvalidExecutionReceiptChallenge) GetExecutionReceiptHash() []byte {
	if m != nil {
		return m.ExecutionReceiptHash
	}
	return nil
}

func (m *InvalidExecutionReceiptChallenge) GetExecutionReceiptSignature() []byte {
	if m != nil {
		return m.ExecutionReceiptSignature
	}
	return nil
}

func (m *InvalidExecutionReceiptChallenge) GetPartIndex() uint64 {
	if m != nil {
		return m.PartIndex
	}
	return 0
}

func (m *InvalidExecutionReceiptChallenge) GetPartTransactions() []*IntermediateRegisters {
	if m != nil {
		return m.PartTransactions
	}
	return nil
}

func (m *InvalidExecutionReceiptChallenge) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type StateTransition struct {
	PreviousStateTransitionHash      []byte   `protobuf:"bytes,1,opt,name=previousStateTransitionHash,proto3" json:"previousStateTransitionHash,omitempty"`
	PreviousCommitApprovalSignatures [][]byte `protobuf:"bytes,2,rep,name=previousCommitApprovalSignatures,proto3" json:"previousCommitApprovalSignatures,omitempty"`
	Height                           uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Value                            []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *StateTransition) Reset()         { *m = StateTransition{} }
func (m *StateTransition) String() string { return proto.CompactTextString(m) }
func (*StateTransition) ProtoMessage()    {}
func (*StateTransition) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{14}
}

func (m *StateTransition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateTransition.Unmarshal(m, b)
}
func (m *StateTransition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateTransition.Marshal(b, m, deterministic)
}
func (m *StateTransition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateTransition.Merge(m, src)
}
func (m *StateTransition) XXX_Size() int {
	return xxx_messageInfo_StateTransition.Size(m)
}
func (m *StateTransition) XXX_DiscardUnknown() {
	xxx_messageInfo_StateTransition.DiscardUnknown(m)
}

var xxx_messageInfo_StateTransition proto.InternalMessageInfo

func (m *StateTransition) GetPreviousStateTransitionHash() []byte {
	if m != nil {
		return m.PreviousStateTransitionHash
	}
	return nil
}

func (m *StateTransition) GetPreviousCommitApprovalSignatures() [][]byte {
	if m != nil {
		return m.PreviousCommitApprovalSignatures
	}
	return nil
}

func (m *StateTransition) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *StateTransition) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type SignedStateTransition struct {
	StateTransition      *StateTransition `protobuf:"bytes,1,opt,name=stateTransition,proto3" json:"stateTransition,omitempty"`
	Signature            []byte           `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SignedStateTransition) Reset()         { *m = SignedStateTransition{} }
func (m *SignedStateTransition) String() string { return proto.CompactTextString(m) }
func (*SignedStateTransition) ProtoMessage()    {}
func (*SignedStateTransition) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{15}
}

func (m *SignedStateTransition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedStateTransition.Unmarshal(m, b)
}
func (m *SignedStateTransition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedStateTransition.Marshal(b, m, deterministic)
}
func (m *SignedStateTransition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedStateTransition.Merge(m, src)
}
func (m *SignedStateTransition) XXX_Size() int {
	return xxx_messageInfo_SignedStateTransition.Size(m)
}
func (m *SignedStateTransition) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedStateTransition.DiscardUnknown(m)
}

var xxx_messageInfo_SignedStateTransition proto.InternalMessageInfo

func (m *SignedStateTransition) GetStateTransition() *StateTransition {
	if m != nil {
		return m.StateTransition
	}
	return nil
}

func (m *SignedStateTransition) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type FinalizedStateTransition struct {
	SignedStateTransition *SignedStateTransition `protobuf:"bytes,1,opt,name=signedStateTransition,proto3" json:"signedStateTransition,omitempty"`
	Signatures            [][]byte               `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *FinalizedStateTransition) Reset()         { *m = FinalizedStateTransition{} }
func (m *FinalizedStateTransition) String() string { return proto.CompactTextString(m) }
func (*FinalizedStateTransition) ProtoMessage()    {}
func (*FinalizedStateTransition) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{16}
}

func (m *FinalizedStateTransition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalizedStateTransition.Unmarshal(m, b)
}
func (m *FinalizedStateTransition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalizedStateTransition.Marshal(b, m, deterministic)
}
func (m *FinalizedStateTransition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizedStateTransition.Merge(m, src)
}
func (m *FinalizedStateTransition) XXX_Size() int {
	return xxx_messageInfo_FinalizedStateTransition.Size(m)
}
func (m *FinalizedStateTransition) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizedStateTransition.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizedStateTransition proto.InternalMessageInfo

func (m *FinalizedStateTransition) GetSignedStateTransition() *SignedStateTransition {
	if m != nil {
		return m.SignedStateTransition
	}
	return nil
}

func (m *FinalizedStateTransition) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type StateTransitionVote struct {
	StateTransitionHash  []byte   `protobuf:"bytes,1,opt,name=stateTransitionHash,proto3" json:"stateTransitionHash,omitempty"`
	Vote                 Vote     `protobuf:"varint,2,opt,name=vote,proto3,enum=bamboo.shared.Vote" json:"vote,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateTransitionVote) Reset()         { *m = StateTransitionVote{} }
func (m *StateTransitionVote) String() string { return proto.CompactTextString(m) }
func (*StateTransitionVote) ProtoMessage()    {}
func (*StateTransitionVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{17}
}

func (m *StateTransitionVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateTransitionVote.Unmarshal(m, b)
}
func (m *StateTransitionVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateTransitionVote.Marshal(b, m, deterministic)
}
func (m *StateTransitionVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateTransitionVote.Merge(m, src)
}
func (m *StateTransitionVote) XXX_Size() int {
	return xxx_messageInfo_StateTransitionVote.Size(m)
}
func (m *StateTransitionVote) XXX_DiscardUnknown() {
	xxx_messageInfo_StateTransitionVote.DiscardUnknown(m)
}

var xxx_messageInfo_StateTransitionVote proto.InternalMessageInfo

func (m *StateTransitionVote) GetStateTransitionHash() []byte {
	if m != nil {
		return m.StateTransitionHash
	}
	return nil
}

func (m *StateTransitionVote) GetVote() Vote {
	if m != nil {
		return m.Vote
	}
	return Vote_REJECT
}

func (m *StateTransitionVote) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterEnum("bamboo.shared.Vote", Vote_name, Vote_value)
	proto.RegisterEnum("bamboo.shared.TransactionRegister_AccessMode", TransactionRegister_AccessMode_name, TransactionRegister_AccessMode_value)
	proto.RegisterEnum("bamboo.shared.TransactionRegister_Type", TransactionRegister_Type_name, TransactionRegister_Type_value)
	proto.RegisterEnum("bamboo.shared.Inventory_Item_Type", Inventory_Item_Type_name, Inventory_Item_Type_value)
	proto.RegisterType((*GossipMessage)(nil), "bamboo.shared.GossipMessage")
	proto.RegisterType((*SignedCollectionHash)(nil), "bamboo.shared.SignedCollectionHash")
	proto.RegisterType((*Collection)(nil), "bamboo.shared.Collection")
	proto.RegisterType((*Block)(nil), "bamboo.shared.Block")
	proto.RegisterType((*BlockSeal)(nil), "bamboo.shared.BlockSeal")
	proto.RegisterType((*IntermediateRegisters)(nil), "bamboo.shared.IntermediateRegisters")
	proto.RegisterType((*ExecutionReceipt)(nil), "bamboo.shared.ExecutionReceipt")
	proto.RegisterType((*ResultApproval)(nil), "bamboo.shared.ResultApproval")
	proto.RegisterType((*Transaction)(nil), "bamboo.shared.Transaction")
	proto.RegisterType((*SignedTransaction)(nil), "bamboo.shared.SignedTransaction")
	proto.RegisterType((*Register)(nil), "bamboo.shared.Register")
	proto.RegisterType((*TransactionRegister)(nil), "bamboo.shared.TransactionRegister")
	proto.RegisterType((*TransactionRegister_KeyWeight)(nil), "bamboo.shared.TransactionRegister.KeyWeight")
	proto.RegisterType((*Inventory)(nil), "bamboo.shared.Inventory")
	proto.RegisterType((*Inventory_Item)(nil), "bamboo.shared.Inventory.Item")
	proto.RegisterType((*InvalidExecutionReceiptChallenge)(nil), "bamboo.shared.InvalidExecutionReceiptChallenge")
	proto.RegisterType((*StateTransition)(nil), "bamboo.shared.StateTransition")
	proto.RegisterType((*SignedStateTransition)(nil), "bamboo.shared.SignedStateTransition")
	proto.RegisterType((*FinalizedStateTransition)(nil), "bamboo.shared.FinalizedStateTransition")
	proto.RegisterType((*StateTransitionVote)(nil), "bamboo.shared.StateTransitionVote")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 1620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xcb, 0x6e, 0xdb, 0x46,
	0x17, 0x16, 0x25, 0x5a, 0xb6, 0x8e, 0x6c, 0x99, 0x1e, 0x5f, 0x32, 0xf1, 0xff, 0x27, 0x11, 0xd8,
	0xa2, 0x71, 0x83, 0x54, 0x09, 0x1c, 0xa4, 0x08, 0x9a, 0x20, 0x88, 0x2c, 0x2b, 0xa1, 0x12, 0x5f,
	0x84, 0x91, 0x92, 0xa0, 0x69, 0xd1, 0x80, 0xa6, 0xc6, 0x16, 0x61, 0x89, 0x14, 0x48, 0x4a, 0x8d,
	0x0a, 0x14, 0xdd, 0x74, 0xd1, 0x17, 0x68, 0x17, 0x5d, 0x16, 0xe8, 0xaa, 0x2f, 0x50, 0xa0, 0xcf,
	0xd0, 0x5d, 0x17, 0xed, 0x7b, 0xf4, 0x01, 0x8a, 0x19, 0x52, 0x22, 0x35, 0x24, 0x6d, 0xb5, 0x3b,
	0x9e, 0xdb, 0xc7, 0x99, 0x73, 0xce, 0x9c, 0x0b, 0x94, 0xfa, 0xd4, 0x75, 0xf5, 0x33, 0xea, 0x56,
	0x06, 0x8e, 0xed, 0xd9, 0x68, 0xe5, 0x44, 0xef, 0x9f, 0xd8, 0x76, 0xc5, 0xed, 0xea, 0x0e, 0xed,
	0x6c, 0xdf, 0x38, 0xb3, 0xed, 0xb3, 0x1e, 0xbd, 0xc3, 0x85, 0x27, 0xc3, 0xd3, 0x3b, 0x9e, 0xd9,
	0xa7, 0xae, 0xa7, 0xf7, 0x07, 0xbe, 0xbe, 0xfa, 0x77, 0x11, 0x56, 0x9e, 0xd9, 0xae, 0x6b, 0x0e,
	0x0e, 0x7d, 0x20, 0xf4, 0x29, 0x6c, 0xb8, 0xe6, 0x99, 0x45, 0x3b, 0x35, 0xbb, 0xd7, 0xa3, 0x86,
	0x67, 0xda, 0x96, 0xa6, 0xbb, 0x5d, 0x2c, 0x95, 0xa5, 0x9d, 0xe2, 0xee, 0x7b, 0x95, 0x99, 0x1f,
	0x54, 0x5a, 0x09, 0xaa, 0x5a, 0x86, 0x24, 0x42, 0xa0, 0x87, 0x00, 0xc6, 0x94, 0x83, 0xb3, 0x1c,
	0xf0, 0xaa, 0x00, 0x18, 0x31, 0xc9, 0x90, 0x88, 0x3a, 0xba, 0x0d, 0x0b, 0x27, 0x3d, 0xdb, 0x38,
	0xc7, 0x39, 0x6e, 0xb7, 0x21, 0xd8, 0xed, 0x31, 0x99, 0x96, 0x21, 0xbe, 0x12, 0x7a, 0x00, 0x05,
	0xfe, 0xd1, 0xa2, 0x7a, 0x0f, 0xcb, 0xdc, 0x02, 0x27, 0x59, 0x30, 0xb9, 0x96, 0x21, 0xa1, 0x32,
	0xfa, 0x1c, 0x36, 0x4d, 0xcb, 0xa3, 0x4e, 0x9f, 0x76, 0x4c, 0xdd, 0xa3, 0x84, 0x9e, 0x99, 0xae,
	0x47, 0x1d, 0x17, 0x2f, 0x70, 0x94, 0xf7, 0x05, 0x94, 0x46, 0x92, 0xae, 0x96, 0x21, 0xc9, 0x20,
	0xe8, 0x10, 0x14, 0xfa, 0x8e, 0x1a, 0x43, 0x76, 0x25, 0x42, 0x0d, 0x6a, 0x0e, 0x3c, 0x9c, 0xe7,
	0xc0, 0x37, 0x04, 0xe0, 0xba, 0xa0, 0xa6, 0x65, 0x48, 0xcc, 0x14, 0x3d, 0x83, 0x92, 0x43, 0xdd,
	0x61, 0xcf, 0xab, 0x0e, 0x06, 0x8e, 0x3d, 0xd2, 0x7b, 0x78, 0x91, 0x83, 0x5d, 0x13, 0xc0, 0xc8,
	0x8c, 0x92, 0x96, 0x21, 0x82, 0x19, 0x7a, 0x0c, 0x45, 0xcf, 0xd1, 0x2d, 0x57, 0xf7, 0x63, 0xb3,
	0xc4, 0x51, 0xb6, 0x05, 0x94, 0x76, 0xa8, 0xa1, 0x65, 0x48, 0xd4, 0x00, 0x35, 0x61, 0xcd, 0x0f,
	0x79, 0x44, 0x07, 0x17, 0x38, 0x4a, 0x39, 0x31, 0x65, 0x66, 0xb1, 0xe2, 0xc6, 0xe8, 0x3e, 0x2c,
	0x39, 0x81, 0xdb, 0x30, 0x70, 0xa0, 0x2b, 0xb1, 0x4b, 0xf9, 0x62, 0x2d, 0x43, 0xa6, 0xaa, 0xe8,
	0x15, 0xac, 0x47, 0xce, 0x35, 0x51, 0xc1, 0x45, 0x8e, 0xa0, 0xa6, 0x5f, 0x28, 0x02, 0x96, 0x04,
	0xc0, 0x12, 0xca, 0xb4, 0x46, 0xd4, 0xf2, 0x6c, 0x67, 0x8c, 0x97, 0x13, 0x13, 0xaa, 0x31, 0x91,
	0xb3, 0x84, 0x9a, 0x2a, 0xa3, 0xaf, 0xa1, 0x6c, 0x5a, 0x23, 0xbd, 0x67, 0x76, 0xc4, 0x90, 0xd6,
	0xba, 0x7a, 0xaf, 0x47, 0xad, 0x33, 0x8a, 0x57, 0x38, 0xe0, 0x9d, 0x38, 0xe0, 0x85, 0x66, 0x5a,
	0x86, 0x5c, 0x0a, 0x8d, 0x9e, 0xc3, 0xaa, 0xeb, 0xe9, 0x1e, 0xe5, 0x77, 0x35, 0x79, 0x5c, 0x4a,
	0xfc, 0x6f, 0xd7, 0xc5, 0xb8, 0xcc, 0x6a, 0x69, 0x19, 0x22, 0x1a, 0xb2, 0xb7, 0xe1, 0x07, 0x4a,
	0xd0, 0xc5, 0xab, 0x89, 0x6f, 0xa3, 0x95, 0xa4, 0xcb, 0xde, 0x46, 0x22, 0x08, 0xa2, 0x80, 0x4f,
	0x4d, 0x4b, 0xef, 0x99, 0x5f, 0xc5, 0x7f, 0xa0, 0xf0, 0x1f, 0xdc, 0x14, 0x7e, 0xf0, 0x34, 0x45,
	0x5d, 0xcb, 0x90, 0x54, 0x28, 0xf4, 0x21, 0xc8, 0x23, 0xdb, 0xa3, 0x78, 0xad, 0x2c, 0xed, 0x94,
	0x76, 0xd7, 0x05, 0xc8, 0x57, 0xb6, 0xc7, 0xfc, 0xca, 0x55, 0x58, 0x32, 0x09, 0x2e, 0x60, 0x62,
	0x8c, 0x12, 0x93, 0xa9, 0x15, 0xd7, 0x64, 0xc9, 0x94, 0x00, 0x80, 0xb6, 0x20, 0x7f, 0x48, 0xbd,
	0xae, 0xdd, 0xc1, 0xeb, 0x65, 0x69, 0xa7, 0x40, 0x02, 0x0a, 0x5d, 0x07, 0x20, 0xd4, 0x30, 0x07,
	0x26, 0xb5, 0x3c, 0x17, 0x6f, 0x94, 0x73, 0x3b, 0x05, 0x12, 0xe1, 0x30, 0xbb, 0x16, 0xb5, 0x3a,
	0xd4, 0xc1, 0x9b, 0xbe, 0x9d, 0x4f, 0x21, 0x04, 0x72, 0x53, 0xf7, 0xba, 0x78, 0x8b, 0x5b, 0xf0,
	0x6f, 0xa4, 0x40, 0xae, 0xdd, 0x3e, 0xc0, 0x57, 0xca, 0xd2, 0x8e, 0x4c, 0xd8, 0xe7, 0x5e, 0x01,
	0x16, 0x9b, 0xfa, 0xb8, 0x67, 0xeb, 0x1d, 0xf5, 0x0b, 0xd8, 0x48, 0xaa, 0xdc, 0xe8, 0x03, 0x28,
	0x19, 0xf1, 0xb2, 0xbf, 0x4c, 0x04, 0x2e, 0x3b, 0x28, 0x8b, 0xa1, 0xee, 0x0d, 0x1d, 0xea, 0xe2,
	0x6c, 0x39, 0xb7, 0xb3, 0x4c, 0x22, 0x1c, 0xf5, 0x5b, 0x09, 0x20, 0x84, 0x46, 0xfb, 0xb0, 0x1c,
	0x79, 0x53, 0x2e, 0x96, 0xca, 0xb9, 0x79, 0x0a, 0x03, 0x99, 0xb1, 0x42, 0x77, 0x61, 0xfd, 0xd4,
	0x1e, 0x5a, 0x1d, 0x9d, 0x91, 0x7e, 0xbd, 0x67, 0x27, 0xcc, 0xf2, 0x13, 0x26, 0x89, 0xd4, 0x3f,
	0xb3, 0xb0, 0xc0, 0x29, 0x84, 0x61, 0xd1, 0xe8, 0xea, 0xa6, 0xd5, 0xd8, 0xe7, 0x37, 0x2a, 0x90,
	0x09, 0xc9, 0x7c, 0xda, 0xa5, 0xe6, 0x59, 0xd7, 0xe3, 0x40, 0x32, 0x09, 0x28, 0x74, 0x1b, 0xd6,
	0x06, 0x0e, 0x1d, 0x99, 0xf6, 0xd0, 0x0d, 0xff, 0x95, 0xe3, 0xff, 0x8a, 0x0b, 0x58, 0x79, 0x98,
	0xb6, 0xd6, 0xa0, 0xdf, 0x6c, 0x57, 0xfc, 0xe6, 0x5b, 0x99, 0x34, 0xdf, 0x4a, 0x7b, 0xa2, 0x41,
	0x42, 0x65, 0xf4, 0x19, 0x6c, 0x25, 0x35, 0x4b, 0xca, 0x1a, 0x4e, 0x6e, 0xce, 0x8e, 0x4b, 0x52,
	0x20, 0xd0, 0x03, 0x80, 0x69, 0x67, 0x73, 0x71, 0x9e, 0x03, 0xa6, 0xf6, 0x41, 0x12, 0xd1, 0x15,
	0x22, 0xbc, 0x18, 0x8b, 0xf0, 0x5f, 0x12, 0x14, 0xa6, 0x96, 0xe8, 0xff, 0x41, 0xbb, 0x8d, 0xa4,
	0x4c, 0xc8, 0x40, 0xbb, 0xb0, 0x21, 0x76, 0xae, 0x48, 0xe4, 0x12, 0x65, 0xe8, 0x31, 0x6c, 0x8b,
	0xfc, 0x56, 0x78, 0x9e, 0x1c, 0x3f, 0xcf, 0x05, 0x1a, 0xe8, 0x13, 0xc0, 0xb3, 0x2d, 0x2e, 0x62,
	0x2d, 0x73, 0xeb, 0x54, 0xb9, 0xfa, 0xa3, 0x04, 0x9b, 0x89, 0x7d, 0x1d, 0xed, 0xc0, 0x6a, 0x24,
	0x25, 0x23, 0xb7, 0x15, 0xd9, 0xe8, 0x3e, 0x14, 0x9c, 0xe9, 0xe8, 0x90, 0xe5, 0x8e, 0x4f, 0xeb,
	0x5f, 0x24, 0xd4, 0x44, 0x65, 0x28, 0x1a, 0x76, 0x7f, 0x30, 0xf4, 0xe8, 0x4b, 0x97, 0x76, 0x78,
	0xbe, 0xc9, 0x24, 0xca, 0x52, 0x7f, 0xc9, 0x82, 0x22, 0x56, 0x7b, 0xf6, 0x34, 0x26, 0x39, 0x19,
	0x75, 0xb0, 0x7f, 0xb6, 0x24, 0xd1, 0x6c, 0xc4, 0xb2, 0x62, 0xc4, 0x6a, 0xa0, 0x98, 0x96, 0xe9,
	0x99, 0x7a, 0x2f, 0x9c, 0x7f, 0x72, 0x17, 0x5f, 0x22, 0x66, 0x80, 0x4e, 0xe0, 0x6a, 0xe2, 0x10,
	0x74, 0x60, 0xba, 0x1e, 0x8f, 0xc1, 0x9c, 0xd3, 0x14, 0x49, 0x87, 0x11, 0xd2, 0x74, 0x21, 0x96,
	0xa6, 0x7f, 0x48, 0x50, 0x9a, 0x1d, 0x7e, 0x98, 0x8b, 0xfd, 0x8b, 0xfa, 0xaf, 0x5e, 0xf2, 0x5d,
	0x1c, 0x61, 0xfd, 0xa7, 0x7c, 0x7d, 0x00, 0x57, 0x52, 0xf2, 0x29, 0x28, 0x1a, 0x69, 0x62, 0xb4,
	0x01, 0x0b, 0x03, 0xc7, 0xb6, 0x4f, 0x79, 0xd9, 0x90, 0x89, 0x4f, 0xb0, 0xf8, 0x4c, 0xaf, 0xc1,
	0x47, 0xcf, 0x65, 0x12, 0x32, 0xd4, 0xef, 0x25, 0x28, 0x46, 0x87, 0xa5, 0x2d, 0xc8, 0xbb, 0x86,
	0xc3, 0x86, 0x49, 0x3f, 0xe4, 0x01, 0xc5, 0xb0, 0x2d, 0xdb, 0x32, 0x68, 0x50, 0xdb, 0x7c, 0x02,
	0x3d, 0x89, 0xe6, 0xa6, 0x1f, 0xd6, 0x39, 0x26, 0xa3, 0x68, 0x9a, 0x6e, 0x41, 0xde, 0xe8, 0x0e,
	0xad, 0xf3, 0xc9, 0x5b, 0x0a, 0x28, 0xf5, 0x67, 0x09, 0xd6, 0x62, 0x65, 0x1c, 0x3d, 0x9a, 0x1d,
	0x2e, 0xa5, 0xcb, 0x86, 0xcb, 0xd9, 0xd1, 0xf2, 0x16, 0x28, 0xfe, 0x6d, 0x5a, 0x62, 0xc7, 0x89,
	0xf1, 0x59, 0xff, 0x1a, 0xe8, 0x63, 0xea, 0x88, 0xce, 0x17, 0xb8, 0xea, 0x5d, 0x58, 0x9a, 0x4e,
	0x76, 0x25, 0xc8, 0x9a, 0x9d, 0xc0, 0x6f, 0x59, 0xb3, 0xc3, 0x7c, 0x36, 0xd2, 0x7b, 0x43, 0x1a,
	0x84, 0xdb, 0x27, 0xd4, 0xdf, 0x72, 0xb0, 0x9e, 0xe0, 0x14, 0xf4, 0x10, 0x64, 0x6f, 0x3c, 0xa0,
	0xdc, 0xbe, 0x14, 0x1b, 0x50, 0x12, 0x2c, 0x2a, 0xed, 0xf1, 0x80, 0x12, 0x6e, 0x84, 0x0e, 0x01,
	0x74, 0xc3, 0xa0, 0xae, 0x7b, 0x68, 0x77, 0xfc, 0xff, 0x95, 0x76, 0x3f, 0x9a, 0x03, 0xa2, 0x3a,
	0x35, 0x22, 0x11, 0x80, 0xe0, 0x26, 0xb9, 0xe9, 0x4d, 0x9e, 0x80, 0x7c, 0x4e, 0xc7, 0x6e, 0xf0,
	0xd6, 0x6e, 0xcf, 0x01, 0xfc, 0x82, 0x8e, 0x5f, 0xf3, 0x37, 0x40, 0xb8, 0xe5, 0xf6, 0x7d, 0x28,
	0x4c, 0x59, 0x6c, 0xa2, 0x38, 0xa7, 0xe3, 0xc0, 0x53, 0xec, 0x93, 0xa5, 0xc1, 0x97, 0x61, 0xef,
	0x94, 0x48, 0x40, 0xa9, 0x06, 0x40, 0x78, 0x44, 0x04, 0x90, 0xaf, 0x91, 0x7a, 0xb5, 0x5d, 0x57,
	0x32, 0x68, 0x0d, 0x56, 0x5a, 0x47, 0xd5, 0x66, 0x4b, 0x3b, 0x6e, 0xbf, 0x25, 0xf5, 0xea, 0xbe,
	0x22, 0x21, 0x04, 0xa5, 0xda, 0xf1, 0xd1, 0xd3, 0x06, 0x39, 0xac, 0xef, 0xfb, 0xbc, 0x2c, 0xe3,
	0xed, 0xd7, 0x9f, 0xd6, 0x09, 0xa9, 0xef, 0xbf, 0x7d, 0x4d, 0x1a, 0xed, 0xba, 0x92, 0x43, 0x25,
	0x00, 0x26, 0x0d, 0x68, 0x59, 0xbd, 0x05, 0x32, 0x73, 0x25, 0x83, 0x6f, 0x35, 0x0e, 0x9b, 0x07,
	0x0c, 0xbe, 0x00, 0x0b, 0x35, 0xed, 0xe5, 0xd1, 0x0b, 0x45, 0x42, 0x45, 0x58, 0xdc, 0xab, 0x1e,
	0x54, 0x8f, 0x6a, 0x75, 0x25, 0xab, 0xfe, 0x2a, 0x41, 0x61, 0x3a, 0x9e, 0xa3, 0x7b, 0xb0, 0x60,
	0x7a, 0xb4, 0x3f, 0x99, 0x43, 0xae, 0xa5, 0xcd, 0xf1, 0x95, 0x86, 0x47, 0xfb, 0xc4, 0xd7, 0xdd,
	0x1e, 0x81, 0xcc, 0x48, 0xf4, 0xf1, 0x4c, 0xc0, 0xd5, 0x0b, 0x6d, 0xa3, 0xb1, 0x46, 0x20, 0x77,
	0xc3, 0x22, 0xc2, 0xbf, 0x55, 0x35, 0xb8, 0xc2, 0x2a, 0x14, 0xdb, 0xa4, 0x7a, 0xd4, 0xaa, 0xd6,
	0xda, 0x8d, 0xe3, 0x23, 0xff, 0x1e, 0x7b, 0x07, 0xc7, 0xb5, 0x17, 0x8a, 0xa4, 0xfe, 0x94, 0x85,
	0xf2, 0x65, 0x8b, 0x40, 0x6a, 0xc5, 0x92, 0x2e, 0xa8, 0x58, 0x8f, 0xe0, 0x6a, 0x6a, 0xff, 0x0c,
	0x4e, 0x99, 0xae, 0xc0, 0xea, 0xd3, 0x40, 0x77, 0xbc, 0x86, 0xd5, 0xa1, 0xef, 0x82, 0x36, 0x15,
	0x32, 0x50, 0x13, 0x14, 0x46, 0xb4, 0xa3, 0x43, 0xdf, 0xbf, 0xa9, 0xf8, 0x31, 0xeb, 0x4b, 0xea,
	0xe1, 0xef, 0x12, 0xac, 0x8a, 0x73, 0xfe, 0x13, 0xf8, 0xdf, 0xa4, 0xf1, 0x89, 0xeb, 0x41, 0xe8,
	0x9a, 0x8b, 0x54, 0xd0, 0x73, 0x28, 0x4f, 0xc4, 0x35, 0xbb, 0xdf, 0x37, 0x93, 0x66, 0x09, 0xbf,
	0x12, 0x5d, 0xaa, 0x17, 0x19, 0x33, 0x73, 0x33, 0x63, 0xe6, 0xb4, 0xda, 0xc8, 0xd1, 0x6a, 0xf3,
	0x0d, 0x6c, 0x26, 0x2e, 0x4f, 0x48, 0x8b, 0x6f, 0x73, 0xd2, 0x3c, 0xdb, 0x5c, 0x7c, 0x97, 0x9b,
	0x71, 0x68, 0x56, 0x74, 0xe8, 0x0f, 0x12, 0xe0, 0xb4, 0xed, 0x0a, 0xbd, 0x49, 0x5b, 0x03, 0xa5,
	0xf9, 0xd7, 0xc0, 0xb4, 0x25, 0xf0, 0xb2, 0xcd, 0xe2, 0x3b, 0x09, 0xd6, 0x13, 0x36, 0x2d, 0x36,
	0x01, 0xb9, 0xa9, 0x51, 0x4e, 0x12, 0xa1, 0x9b, 0xc1, 0x1e, 0x98, 0x4d, 0xdd, 0x03, 0x83, 0x2d,
	0x30, 0x25, 0x74, 0xb7, 0x6e, 0x80, 0xcc, 0x7f, 0x0d, 0x90, 0x27, 0xf5, 0xe7, 0xf5, 0x5a, 0x5b,
	0xc9, 0xb0, 0xaa, 0x53, 0x6d, 0x36, 0xc9, 0xf1, 0xab, 0xba, 0x22, 0xed, 0x2d, 0xbd, 0xc9, 0xfb,
	0x68, 0x27, 0x79, 0xbe, 0x03, 0xdc, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x99, 0x5d, 0x59, 0x36,
	0xaf, 0x13, 0x00, 0x00,
}
