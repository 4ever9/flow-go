syntax = "proto3";

package bamboo.proto;

import "shared/messages.proto";

service AccessNode {
    rpc Ping (PingRequest) returns (PingResponse);

    // Receiving transactions from user agents
    rpc UserSubmitTransaction (UserTransactionRequest) returns (UserTransactionResponse);

    // Receiving transaction from access node
    rpc ClusterSubmitTransaction (ClusterTransactionRequest) returns (ClusterTransactionResponse);

    // Providing transaction the node has committed to, for execution nodes
    rpc GetTransaction (TransactionRequest) returns (TransactionResponse);

    // Providing collection the node has committed to, for execution nodes
    rpc GetCollection (CollectionRequest) returns (CollectionResponse);

    // Notifying access node peers that the node has transactions and/or updated signatures.
    rpc UpdateTransaction (TransactionUpdateRequest) returns (TransactionUpdateResponse);

    // Notifying access node peers that the node has a collection and/or updated signatures.
    rpc UpdateCollection (CollectionUpdateRequest) returns (CollectionUpdateResponse);

    // Providing register values and metadata.
    rpc GetRegisters (RegistersRequest) returns (RegistersResponse);

    // Providing account balances.
    rpc GetBalance (BalanceRequest) returns (BalanceResponse);

    // Process execution result from execute nodes and update registers.
    rpc ProcessExecutionReceipt(ProcessExecutionReceiptRequest) returns (ProcessExecutionReceiptResponse);
}
