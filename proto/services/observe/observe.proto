syntax = "proto3";

package flow.services.observe;

option go_package = "observe";

import "google/protobuf/timestamp.proto";
import "shared/messages.proto";

// ObserveService is the user-facing API provided by access nodes.
service ObserveService {
  rpc Ping(PingRequest) returns (PingResponse);

  // SendTransaction submits a transaction to the network.
  rpc SendTransaction(SendTransactionRequest) returns (SendTransactionResponse);
  // GetBlockByHash gets a block by hash.
  rpc GetBlockByHash(GetBlockByHashRequest) returns (GetBlockByHashResponse);
  // GetBlockByNumber gets a block by number.
  rpc GetBlockByNumber(GetBlockByNumberRequest) returns (GetBlockByNumberResponse);
  // GetLatestBlock gets the latest sealed block.
  rpc GetLatestBlock(GetLatestBlockRequest) returns (GetLatestBlockResponse);
  // GetTransactions gets a transaction by hash.
  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse);
  // GetAccount gets an account by address.
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  // CallScript calls code deployed on the blockchain.
  rpc CallScript(CallScriptRequest) returns (CallScriptResponse);
}


message PingRequest {}

message PingResponse {
  bytes address = 1;
}

message SendTransactionRequest {
  flow.shared.messages.Transaction transaction = 1;
}

message SendTransactionResponse {
  bytes hash = 1;
}

message Block {
  enum Status {
    STATUS_PENDING = 0;
    STATUS_SEALED = 1;
  }
  bytes hash = 1;
  uint64 number = 2;
  bytes prev_block_hash = 3;
  google.protobuf.Timestamp timestamp = 4;
  repeated bytes transaction_hashes = 5;
  Status status = 6;
}

message GetBlockByHashRequest {
  bytes hash = 1;
}

message GetBlockByHashResponse {
  Block block = 1;
}

message GetBlockByNumberRequest {
  uint64 number = 1;
}

message GetBlockByNumberResponse {
  Block block = 1;
}

message GetLatestBlockRequest {
  bool is_sealed = 1;
}

message GetLatestBlockResponse {
  Block block = 1;
}

message GetTransactionRequest {
  bytes hash = 1;
}

message GetTransactionResponse {
  flow.shared.messages.Transaction transaction = 1;
}

message GetAccountRequest {
  bytes address = 1;
}

message GetAccountResponse {
  flow.shared.messages.Account account = 1;
}

message CallScriptRequest {
  bytes script = 1;
}

message CallScriptResponse {
  string type = 1;
  bytes value = 2;
}
