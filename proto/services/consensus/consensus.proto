syntax = "proto3";

package bamboo.services.consensus;

option go_package = "consensus";

import "shared/messages.proto";
import "google/protobuf/empty.proto";


service ConsensusService {
  rpc Ping(PingRequest) returns (PingResponse);

  // Receive a signed collection from an access node.
  rpc SubmitCollection (SubmitCollectionRequest) returns (google.protobuf.Empty);

  // Notify the security node that another has proposed a block.
  rpc ProposeBlock (ProposeBlockRequest) returns (ProposeBlockResponse);
  
  // Update a block proposal to add new signatures.
  rpc UpdateProposedBlock (UpdateProposedBlockRequest) returns (UpdateProposedBlockResponse);

  // Returns a block by hash
  rpc GetBlockByHash (GetBlockByHashRequest) returns (GetBlockResponse);

  // Returns a block by height
  rpc GetBlockByHeight (GetBlockByHeightRequest) returns (GetBlockResponse);

  // Returns the finalized state transitions at the requested heights.
  rpc GetFinalizedStateTransitions(GetFinalizedStateTransitionsRequest) returns (GetFinalizedStateTransitionsResponse);

  // Process state transition proposal from other security node.
  rpc ProcessStateTransitionProposal(ProcessStateTransitionProposalRequest) returns (google.protobuf.Empty);

  // Process state transition prepare vote from other security node.
  rpc ProcessStateTransitionPrepareVote(ProcessSignedStateTransitionPrepareVoteRequest) returns (google.protobuf.Empty);

  // Process state transition commit vote from other security node.
  rpc ProcessStateTransitionCommitVote(ProcessSignedStateTransitionCommitVoteRequest) returns (google.protobuf.Empty);
}


message PingRequest {}

message PingResponse {
  bytes address = 1;
}

message SubmitCollectionRequest {
  bamboo.shared.messages.Collection collection = 1;
  repeated bytes accessSignatures = 2;
}

message ProposeBlockRequest {}

message ProposeBlockResponse {}

message UpdateProposedBlockRequest {}

message UpdateProposedBlockResponse {}

message GetBlockByHashRequest {
  bytes blockHash = 1;
}

message GetBlockByHeightRequest {
  uint64 blockHeight = 1;
}

message GetBlockResponse {
  bamboo.shared.messages.Block block = 1;
}

message GetFinalizedStateTransitionsRequest {
  repeated uint64 stateTransitionHeights = 1;
}

message GetFinalizedStateTransitionsResponse {
  repeated FinalizedStateTransition finalizedStateTransitions = 1;
}

message ProcessStateTransitionProposalRequest {
  SignedStateTransition transition = 1;
}

message ProcessSignedStateTransitionPrepareVoteRequest {
  StateTransitionVote stateTransitionVote = 1;
  bytes signature = 2;
}

message ProcessSignedStateTransitionCommitVoteRequest {
  StateTransitionVote stateTransitionVote = 1;
  bytes signature = 2;
}

message StateTransition {
  bytes previousStateTransitionHash = 1;
  repeated bytes previousCommitApprovalSignatures = 2;
  uint64 height = 3;
  bytes value = 4;
}

message SignedStateTransition {
  StateTransition stateTransition = 1;
  bytes signature = 2;
}

message FinalizedStateTransition {
  SignedStateTransition signedStateTransition = 1;
  repeated bytes signatures = 2;
}

enum Vote {
  REJECT = 0;
  APPROVE = 1;
}

message StateTransitionVote {
  bytes stateTransitionHash = 1;
  Vote vote = 2;
  uint64 height = 3;
}
