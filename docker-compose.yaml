version: "3.3"
services:
  collect_db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=foo

  collect:
    build:
      context: .
      dockerfile: cmd/collect/Dockerfile
    depends_on:
      - collect_db
    ports:
      - "3001:3001"
    restart: on-failure:5
    environment:
      - BAM_PORT=3001
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=execute_db:5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo

  consensus_db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=foo

  consensus:
    build:
      context: .
      dockerfile: cmd/consensus/Dockerfile
    depends_on:
      - consensus_db
    ports:
      - "3002:3001"
    restart: on-failure:5
    environment:
      - BAM_PORT=3001
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=execute_db:5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo

  execute_db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=foo

  execute:
    build:
      context: .
      dockerfile: cmd/execute/Dockerfile
    depends_on:
      - execute_db
    ports:
      - "3003:3001"
    restart: on-failure:5
    environment:
      - BAM_PORT=3001
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=execute_db:5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo

  verify_db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=foo

  verify:
    build:
      context: .
      dockerfile: cmd/verify/Dockerfile
    depends_on:
      - verify_db
    ports:
      - "3004:3001"
    restart: on-failure:5
    environment:
      - BAM_PORT=3001
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=execute_db:5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo    

  observe_db:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=foo

  observe:
    build:
      context: .
      dockerfile: cmd/observe/Dockerfile
    depends_on:
      - observe_db
    ports:
      - "3005:3001"
    restart: on-failure:5
    environment:
      - BAM_PORT=3001
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=execute_db:5432
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo    
      
  testhelpers:
    build:
      context: .
      dockerfile: cmd/testhelpers/Dockerfile
    depends_on:
      - collect_db
      - consensus_db
      - execute_db
      - verify_db
    ports:
      - "3009:3009"
    restart: on-failure:5
    environment:
      - APP_ENV=LOCAL
      - PORT=3009
      - POSTGRES_GCP_CONNECTION_NAME=foo
      - POSTGRES_ADDR=db:5432 #TODO: this won't work because we need to setup configs to connect to 2 different dbs.
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=foo

  test:
    build:
      context: .
      dockerfile: integration-tests/Dockerfile
    depends_on:
      - collect
      - consensus
      - execute
      - verify
      - testhelpers
    environment:
      - COLLECT_ADDR=collect:3001
      - CONSENSUS_ADDR=consensus:3001
      - EXECUTE_ADDR=execute:3001
      - VERIFY_ADDR=verify:3001
      - OBSERVE_ADDR=observe:3001    
      - HELPERS_ADDR=testhelpers:3009

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_collect_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - collect_db
    command: collect_db:5432

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_consensus_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - consensus_db
    command: consensus_db:5432

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_execute_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - execute_db
    command: execute_db:5432

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_verify_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - verify_db
    command: verify_db:5432

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_observe_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - observe_db
    command: observe_db:5432

  # See https://github.com/dadarek/docker-wait-for-dependencies
  # Run this as a separate "docker-compose" up command
  start_test_dependencies:
    image: dadarek/wait-for-dependencies
    depends_on:
      - collect
      - consensus
      - execute
      - verify
      - observe
      - testhelpers
    command: collect:3001 consensus:3001 execute:3001 verify:3001 observe:3001 testhelpers:3009
