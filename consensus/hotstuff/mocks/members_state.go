// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import flow "github.com/dapperlabs/flow-go/model/flow"
import hotstuff "github.com/dapperlabs/flow-go/consensus/hotstuff"
import mock "github.com/stretchr/testify/mock"

// MembersState is an autogenerated mock type for the MembersState type
type MembersState struct {
	mock.Mock
}

// AtBlockID provides a mock function with given fields: blockID
func (_m *MembersState) AtBlockID(blockID flow.Identifier) hotstuff.MembersSnapshot {
	ret := _m.Called(blockID)

	var r0 hotstuff.MembersSnapshot
	if rf, ok := ret.Get(0).(func(flow.Identifier) hotstuff.MembersSnapshot); ok {
		r0 = rf(blockID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(hotstuff.MembersSnapshot)
		}
	}

	return r0
}

// LeaderForView provides a mock function with given fields: view
func (_m *MembersState) LeaderForView(view uint64) (flow.Identifier, error) {
	ret := _m.Called(view)

	var r0 flow.Identifier
	if rf, ok := ret.Get(0).(func(uint64) flow.Identifier); ok {
		r0 = rf(view)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.Identifier)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(view)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Self provides a mock function with given fields:
func (_m *MembersState) Self() flow.Identifier {
	ret := _m.Called()

	var r0 flow.Identifier
	if rf, ok := ret.Get(0).(func() flow.Identifier); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.Identifier)
		}
	}

	return r0
}
