// Code generated by mockery v1.0.0. DO NOT EDIT.

package mempool

import flow "github.com/dapperlabs/flow-go/model/flow"

import mock "github.com/stretchr/testify/mock"

// IngestedResultIDs is an autogenerated mock type for the IngestedResultIDs type
type IngestedResultIDs struct {
	mock.Mock
}

// Add provides a mock function with given fields: result
func (_m *IngestedResultIDs) Add(result *flow.ExecutionResult) error {
	ret := _m.Called(result)

	var r0 error
	if rf, ok := ret.Get(0).(func(*flow.ExecutionResult) error); ok {
		r0 = rf(result)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// All provides a mock function with given fields:
func (_m *IngestedResultIDs) All() flow.IdentifierList {
	ret := _m.Called()

	var r0 flow.IdentifierList
	if rf, ok := ret.Get(0).(func() flow.IdentifierList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.IdentifierList)
		}
	}

	return r0
}

// Has provides a mock function with given fields: resultID
func (_m *IngestedResultIDs) Has(resultID flow.Identifier) bool {
	ret := _m.Called(resultID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(flow.Identifier) bool); ok {
		r0 = rf(resultID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Rem provides a mock function with given fields: resultID
func (_m *IngestedResultIDs) Rem(resultID flow.Identifier) bool {
	ret := _m.Called(resultID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(flow.Identifier) bool); ok {
		r0 = rf(resultID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
