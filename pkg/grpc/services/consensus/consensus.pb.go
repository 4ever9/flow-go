// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/consensus/consensus.proto

package consensus

import (
	context "context"
	fmt "fmt"
	shared "github.com/dapperlabs/bamboo-node/pkg/grpc/shared"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{0}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{1}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type SubmitCollectionRequest struct {
	Collection           *shared.Collection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	AccessSignatures     [][]byte           `protobuf:"bytes,2,rep,name=accessSignatures,proto3" json:"accessSignatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubmitCollectionRequest) Reset()         { *m = SubmitCollectionRequest{} }
func (m *SubmitCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitCollectionRequest) ProtoMessage()    {}
func (*SubmitCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{2}
}

func (m *SubmitCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitCollectionRequest.Unmarshal(m, b)
}
func (m *SubmitCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitCollectionRequest.Marshal(b, m, deterministic)
}
func (m *SubmitCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitCollectionRequest.Merge(m, src)
}
func (m *SubmitCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitCollectionRequest.Size(m)
}
func (m *SubmitCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitCollectionRequest proto.InternalMessageInfo

func (m *SubmitCollectionRequest) GetCollection() *shared.Collection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *SubmitCollectionRequest) GetAccessSignatures() [][]byte {
	if m != nil {
		return m.AccessSignatures
	}
	return nil
}

type ProposeBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeBlockRequest) Reset()         { *m = ProposeBlockRequest{} }
func (m *ProposeBlockRequest) String() string { return proto.CompactTextString(m) }
func (*ProposeBlockRequest) ProtoMessage()    {}
func (*ProposeBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{3}
}

func (m *ProposeBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeBlockRequest.Unmarshal(m, b)
}
func (m *ProposeBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeBlockRequest.Marshal(b, m, deterministic)
}
func (m *ProposeBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeBlockRequest.Merge(m, src)
}
func (m *ProposeBlockRequest) XXX_Size() int {
	return xxx_messageInfo_ProposeBlockRequest.Size(m)
}
func (m *ProposeBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeBlockRequest proto.InternalMessageInfo

type ProposeBlockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeBlockResponse) Reset()         { *m = ProposeBlockResponse{} }
func (m *ProposeBlockResponse) String() string { return proto.CompactTextString(m) }
func (*ProposeBlockResponse) ProtoMessage()    {}
func (*ProposeBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{4}
}

func (m *ProposeBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeBlockResponse.Unmarshal(m, b)
}
func (m *ProposeBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeBlockResponse.Marshal(b, m, deterministic)
}
func (m *ProposeBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeBlockResponse.Merge(m, src)
}
func (m *ProposeBlockResponse) XXX_Size() int {
	return xxx_messageInfo_ProposeBlockResponse.Size(m)
}
func (m *ProposeBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeBlockResponse proto.InternalMessageInfo

type UpdateProposedBlockRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProposedBlockRequest) Reset()         { *m = UpdateProposedBlockRequest{} }
func (m *UpdateProposedBlockRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProposedBlockRequest) ProtoMessage()    {}
func (*UpdateProposedBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{5}
}

func (m *UpdateProposedBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProposedBlockRequest.Unmarshal(m, b)
}
func (m *UpdateProposedBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProposedBlockRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProposedBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProposedBlockRequest.Merge(m, src)
}
func (m *UpdateProposedBlockRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProposedBlockRequest.Size(m)
}
func (m *UpdateProposedBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProposedBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProposedBlockRequest proto.InternalMessageInfo

type UpdateProposedBlockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProposedBlockResponse) Reset()         { *m = UpdateProposedBlockResponse{} }
func (m *UpdateProposedBlockResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProposedBlockResponse) ProtoMessage()    {}
func (*UpdateProposedBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{6}
}

func (m *UpdateProposedBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProposedBlockResponse.Unmarshal(m, b)
}
func (m *UpdateProposedBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProposedBlockResponse.Marshal(b, m, deterministic)
}
func (m *UpdateProposedBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProposedBlockResponse.Merge(m, src)
}
func (m *UpdateProposedBlockResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateProposedBlockResponse.Size(m)
}
func (m *UpdateProposedBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProposedBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProposedBlockResponse proto.InternalMessageInfo

type GetBlockByHashRequest struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHashRequest) Reset()         { *m = GetBlockByHashRequest{} }
func (m *GetBlockByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashRequest) ProtoMessage()    {}
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{7}
}

func (m *GetBlockByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashRequest.Unmarshal(m, b)
}
func (m *GetBlockByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashRequest.Merge(m, src)
}
func (m *GetBlockByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashRequest.Size(m)
}
func (m *GetBlockByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashRequest proto.InternalMessageInfo

func (m *GetBlockByHashRequest) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type GetBlockByHeightRequest struct {
	BlockHeight          uint64   `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHeightRequest) Reset()         { *m = GetBlockByHeightRequest{} }
func (m *GetBlockByHeightRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHeightRequest) ProtoMessage()    {}
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{8}
}

func (m *GetBlockByHeightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHeightRequest.Unmarshal(m, b)
}
func (m *GetBlockByHeightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHeightRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockByHeightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHeightRequest.Merge(m, src)
}
func (m *GetBlockByHeightRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHeightRequest.Size(m)
}
func (m *GetBlockByHeightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHeightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHeightRequest proto.InternalMessageInfo

func (m *GetBlockByHeightRequest) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

type GetBlockResponse struct {
	Block                *shared.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{9}
}

func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (m *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(m, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlock() *shared.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetFinalizedStateTransitionsRequest struct {
	StateTransitionHeights []uint64 `protobuf:"varint,1,rep,packed,name=stateTransitionHeights,proto3" json:"stateTransitionHeights,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GetFinalizedStateTransitionsRequest) Reset()         { *m = GetFinalizedStateTransitionsRequest{} }
func (m *GetFinalizedStateTransitionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetFinalizedStateTransitionsRequest) ProtoMessage()    {}
func (*GetFinalizedStateTransitionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{10}
}

func (m *GetFinalizedStateTransitionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFinalizedStateTransitionsRequest.Unmarshal(m, b)
}
func (m *GetFinalizedStateTransitionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFinalizedStateTransitionsRequest.Marshal(b, m, deterministic)
}
func (m *GetFinalizedStateTransitionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFinalizedStateTransitionsRequest.Merge(m, src)
}
func (m *GetFinalizedStateTransitionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetFinalizedStateTransitionsRequest.Size(m)
}
func (m *GetFinalizedStateTransitionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFinalizedStateTransitionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFinalizedStateTransitionsRequest proto.InternalMessageInfo

func (m *GetFinalizedStateTransitionsRequest) GetStateTransitionHeights() []uint64 {
	if m != nil {
		return m.StateTransitionHeights
	}
	return nil
}

type GetFinalizedStateTransitionsResponse struct {
	FinalizedStateTransitions []*shared.FinalizedStateTransition `protobuf:"bytes,1,rep,name=finalizedStateTransitions,proto3" json:"finalizedStateTransitions,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                           `json:"-"`
	XXX_unrecognized          []byte                             `json:"-"`
	XXX_sizecache             int32                              `json:"-"`
}

func (m *GetFinalizedStateTransitionsResponse) Reset()         { *m = GetFinalizedStateTransitionsResponse{} }
func (m *GetFinalizedStateTransitionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetFinalizedStateTransitionsResponse) ProtoMessage()    {}
func (*GetFinalizedStateTransitionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{11}
}

func (m *GetFinalizedStateTransitionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFinalizedStateTransitionsResponse.Unmarshal(m, b)
}
func (m *GetFinalizedStateTransitionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFinalizedStateTransitionsResponse.Marshal(b, m, deterministic)
}
func (m *GetFinalizedStateTransitionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFinalizedStateTransitionsResponse.Merge(m, src)
}
func (m *GetFinalizedStateTransitionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetFinalizedStateTransitionsResponse.Size(m)
}
func (m *GetFinalizedStateTransitionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFinalizedStateTransitionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFinalizedStateTransitionsResponse proto.InternalMessageInfo

func (m *GetFinalizedStateTransitionsResponse) GetFinalizedStateTransitions() []*shared.FinalizedStateTransition {
	if m != nil {
		return m.FinalizedStateTransitions
	}
	return nil
}

type ProcessSignedStateTransitionPrepareVoteRequest struct {
	StateTransitionVote  *shared.StateTransitionVote `protobuf:"bytes,1,opt,name=stateTransitionVote,proto3" json:"stateTransitionVote,omitempty"`
	Signature            []byte                      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProcessSignedStateTransitionPrepareVoteRequest) Reset() {
	*m = ProcessSignedStateTransitionPrepareVoteRequest{}
}
func (m *ProcessSignedStateTransitionPrepareVoteRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ProcessSignedStateTransitionPrepareVoteRequest) ProtoMessage() {}
func (*ProcessSignedStateTransitionPrepareVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{12}
}

func (m *ProcessSignedStateTransitionPrepareVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest.Unmarshal(m, b)
}
func (m *ProcessSignedStateTransitionPrepareVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest.Marshal(b, m, deterministic)
}
func (m *ProcessSignedStateTransitionPrepareVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest.Merge(m, src)
}
func (m *ProcessSignedStateTransitionPrepareVoteRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest.Size(m)
}
func (m *ProcessSignedStateTransitionPrepareVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessSignedStateTransitionPrepareVoteRequest proto.InternalMessageInfo

func (m *ProcessSignedStateTransitionPrepareVoteRequest) GetStateTransitionVote() *shared.StateTransitionVote {
	if m != nil {
		return m.StateTransitionVote
	}
	return nil
}

func (m *ProcessSignedStateTransitionPrepareVoteRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ProcessSignedStateTransitionCommitVoteRequest struct {
	StateTransitionVote  *shared.StateTransitionVote `protobuf:"bytes,1,opt,name=stateTransitionVote,proto3" json:"stateTransitionVote,omitempty"`
	Signature            []byte                      `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProcessSignedStateTransitionCommitVoteRequest) Reset() {
	*m = ProcessSignedStateTransitionCommitVoteRequest{}
}
func (m *ProcessSignedStateTransitionCommitVoteRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ProcessSignedStateTransitionCommitVoteRequest) ProtoMessage() {}
func (*ProcessSignedStateTransitionCommitVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e74762047b656a23, []int{13}
}

func (m *ProcessSignedStateTransitionCommitVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest.Unmarshal(m, b)
}
func (m *ProcessSignedStateTransitionCommitVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest.Marshal(b, m, deterministic)
}
func (m *ProcessSignedStateTransitionCommitVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest.Merge(m, src)
}
func (m *ProcessSignedStateTransitionCommitVoteRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest.Size(m)
}
func (m *ProcessSignedStateTransitionCommitVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessSignedStateTransitionCommitVoteRequest proto.InternalMessageInfo

func (m *ProcessSignedStateTransitionCommitVoteRequest) GetStateTransitionVote() *shared.StateTransitionVote {
	if m != nil {
		return m.StateTransitionVote
	}
	return nil
}

func (m *ProcessSignedStateTransitionCommitVoteRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "bamboo.services.consensus.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "bamboo.services.consensus.PingResponse")
	proto.RegisterType((*SubmitCollectionRequest)(nil), "bamboo.services.consensus.SubmitCollectionRequest")
	proto.RegisterType((*ProposeBlockRequest)(nil), "bamboo.services.consensus.ProposeBlockRequest")
	proto.RegisterType((*ProposeBlockResponse)(nil), "bamboo.services.consensus.ProposeBlockResponse")
	proto.RegisterType((*UpdateProposedBlockRequest)(nil), "bamboo.services.consensus.UpdateProposedBlockRequest")
	proto.RegisterType((*UpdateProposedBlockResponse)(nil), "bamboo.services.consensus.UpdateProposedBlockResponse")
	proto.RegisterType((*GetBlockByHashRequest)(nil), "bamboo.services.consensus.GetBlockByHashRequest")
	proto.RegisterType((*GetBlockByHeightRequest)(nil), "bamboo.services.consensus.GetBlockByHeightRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "bamboo.services.consensus.GetBlockResponse")
	proto.RegisterType((*GetFinalizedStateTransitionsRequest)(nil), "bamboo.services.consensus.GetFinalizedStateTransitionsRequest")
	proto.RegisterType((*GetFinalizedStateTransitionsResponse)(nil), "bamboo.services.consensus.GetFinalizedStateTransitionsResponse")
	proto.RegisterType((*ProcessSignedStateTransitionPrepareVoteRequest)(nil), "bamboo.services.consensus.ProcessSignedStateTransitionPrepareVoteRequest")
	proto.RegisterType((*ProcessSignedStateTransitionCommitVoteRequest)(nil), "bamboo.services.consensus.ProcessSignedStateTransitionCommitVoteRequest")
}

func init() { proto.RegisterFile("services/consensus/consensus.proto", fileDescriptor_e74762047b656a23) }

var fileDescriptor_e74762047b656a23 = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0xdf, 0x4e, 0x13, 0x41,
	0x14, 0xc6, 0xb3, 0x80, 0x1a, 0x4e, 0xab, 0x69, 0x06, 0x81, 0xb2, 0x80, 0xa9, 0xa3, 0xd1, 0x46,
	0xc2, 0x96, 0x94, 0xc0, 0x8d, 0x89, 0x26, 0x25, 0x0a, 0xde, 0x35, 0x5b, 0xff, 0x24, 0x26, 0x98,
	0x4c, 0xb7, 0x87, 0x65, 0x63, 0xbb, 0x53, 0x77, 0xa6, 0x26, 0x78, 0x4d, 0x4c, 0x7c, 0x01, 0x6f,
	0x7d, 0x01, 0x7d, 0x0b, 0x1f, 0xcc, 0xec, 0xee, 0xcc, 0xb2, 0xa5, 0x9d, 0x85, 0x72, 0xe5, 0x5d,
	0xf7, 0x9c, 0xf3, 0x9d, 0xf9, 0xe6, 0xcc, 0xe9, 0x0f, 0xa8, 0xc0, 0xe8, 0x6b, 0xe0, 0xa1, 0x68,
	0x78, 0x3c, 0x14, 0x18, 0x8a, 0x51, 0xee, 0x97, 0x33, 0x8c, 0xb8, 0xe4, 0x64, 0xad, 0xcb, 0x06,
	0x5d, 0xce, 0x1d, 0x5d, 0xea, 0x64, 0x05, 0xf6, 0xb2, 0x38, 0x65, 0x11, 0xf6, 0x1a, 0x03, 0x14,
	0x82, 0xf9, 0xa8, 0x14, 0xf6, 0xba, 0xcf, 0xb9, 0xdf, 0xc7, 0x46, 0xf2, 0xd5, 0x1d, 0x9d, 0x34,
	0x70, 0x30, 0x94, 0x67, 0x69, 0x92, 0xde, 0x85, 0x52, 0x3b, 0x08, 0x7d, 0x17, 0xbf, 0x8c, 0x50,
	0x48, 0x5a, 0x87, 0x72, 0xfa, 0x29, 0x86, 0x71, 0x5b, 0x52, 0x85, 0x3b, 0xac, 0xd7, 0x8b, 0x50,
	0x88, 0xaa, 0x55, 0xb3, 0xea, 0x65, 0x57, 0x7f, 0xd2, 0x1f, 0x16, 0xac, 0x76, 0x46, 0xdd, 0x41,
	0x20, 0x0f, 0x78, 0xbf, 0x8f, 0x9e, 0x0c, 0x78, 0xa8, 0xba, 0x90, 0x16, 0x80, 0x97, 0x05, 0x13,
	0x61, 0xa9, 0x49, 0x1d, 0x6d, 0x3c, 0x31, 0xe9, 0x64, 0x26, 0x73, 0xf2, 0x9c, 0x8a, 0x3c, 0x83,
	0x0a, 0xf3, 0x3c, 0x14, 0xa2, 0x13, 0xf8, 0x21, 0x93, 0xa3, 0x08, 0x45, 0x75, 0xae, 0x36, 0x5f,
	0x2f, 0xbb, 0x13, 0x71, 0xba, 0x0c, 0x4b, 0xed, 0x88, 0x0f, 0xb9, 0xc0, 0x56, 0x9f, 0x7b, 0x9f,
	0xf5, 0x65, 0x56, 0xe0, 0xfe, 0x78, 0x38, 0xbd, 0x14, 0xdd, 0x00, 0xfb, 0xdd, 0xb0, 0xc7, 0x24,
	0xaa, 0x6c, 0x6f, 0x4c, 0xb5, 0x09, 0xeb, 0x53, 0xb3, 0x4a, 0xbc, 0x07, 0xcb, 0x87, 0x28, 0x93,
	0x58, 0xeb, 0xec, 0x88, 0x89, 0x53, 0x7d, 0xe9, 0x0d, 0x58, 0xec, 0xc6, 0xd1, 0x38, 0xa6, 0x86,
	0x75, 0x11, 0xa0, 0xcf, 0x61, 0x35, 0x27, 0xc3, 0xc0, 0x3f, 0x95, 0x5a, 0x58, 0x83, 0x52, 0x5a,
	0x97, 0x44, 0x13, 0xe9, 0x82, 0x9b, 0x0f, 0xd1, 0x43, 0xa8, 0x68, 0x71, 0xf6, 0x32, 0xbb, 0x70,
	0x2b, 0x29, 0x51, 0xe3, 0xdd, 0x34, 0x8d, 0x37, 0x55, 0xa5, 0xb5, 0xf4, 0x18, 0x1e, 0x1d, 0xa2,
	0x7c, 0x1d, 0x84, 0xac, 0x1f, 0x7c, 0xc3, 0x5e, 0x47, 0x32, 0x89, 0x6f, 0x23, 0x16, 0x8a, 0x20,
	0x9e, 0xb9, 0xd0, 0x8e, 0xf6, 0x61, 0x45, 0x8c, 0xa7, 0x52, 0x23, 0xf1, 0x12, 0xcc, 0xd7, 0x17,
	0x5c, 0x43, 0x96, 0xfe, 0xb4, 0xe0, 0x71, 0x71, 0x7f, 0x65, 0x3e, 0x84, 0xb5, 0x13, 0x53, 0x51,
	0x72, 0x46, 0xa9, 0xb9, 0x63, 0xba, 0x90, 0xa9, 0xbb, 0x6b, 0x6e, 0x49, 0xff, 0x58, 0xe0, 0xb4,
	0x23, 0xae, 0xd7, 0x66, 0xa2, 0xa2, 0x1d, 0xe1, 0x90, 0x45, 0xf8, 0x9e, 0x4b, 0xd4, 0x33, 0x38,
	0x86, 0xa5, 0x4b, 0xb7, 0x8c, 0xb3, 0x6a, 0xda, 0x5b, 0x26, 0x73, 0x9d, 0x49, 0x89, 0x3b, 0xad,
	0x4f, 0xbc, 0x2d, 0x42, 0x2f, 0x70, 0x75, 0x2e, 0xdd, 0x96, 0x2c, 0x40, 0x7f, 0x5b, 0xb0, 0x5d,
	0xe4, 0xf7, 0x80, 0x0f, 0x06, 0x81, 0xfc, 0x5f, 0xec, 0x36, 0xff, 0x2e, 0x42, 0xe5, 0x40, 0x63,
	0xa8, 0x93, 0x82, 0x89, 0x7c, 0x80, 0x85, 0x18, 0x25, 0xe4, 0x89, 0x63, 0x24, 0x96, 0x93, 0x43,
	0x8f, 0xfd, 0xf4, 0xca, 0x3a, 0xb5, 0x3c, 0x9f, 0xa0, 0x72, 0x19, 0x3c, 0xa4, 0x59, 0x20, 0x36,
	0x50, 0xca, 0x5e, 0x71, 0x52, 0x30, 0x3a, 0x1a, 0x8c, 0xce, 0xab, 0x18, 0x8c, 0x84, 0x43, 0x39,
	0x8f, 0x0d, 0xe2, 0x14, 0x19, 0x9b, 0xc4, 0x8e, 0xdd, 0xb8, 0x76, 0xbd, 0xba, 0xd0, 0xb9, 0x05,
	0x4b, 0x53, 0x90, 0x43, 0xf6, 0x0a, 0x1a, 0x99, 0x01, 0x66, 0xef, 0xcf, 0x2a, 0x53, 0x36, 0x38,
	0xdc, 0x1b, 0x27, 0x1b, 0xd9, 0x29, 0xe8, 0x34, 0x15, 0x82, 0xf6, 0xd6, 0x35, 0x14, 0xd9, 0x81,
	0xe2, 0x02, 0x6b, 0x9a, 0x89, 0x85, 0x0f, 0x69, 0x00, 0xe8, 0x6c, 0x87, 0xfe, 0xb2, 0x60, 0xa3,
	0x88, 0x51, 0xe4, 0x45, 0x71, 0xb7, 0xab, 0xe0, 0x69, 0xbf, 0xbc, 0xb1, 0x5e, 0x39, 0xf4, 0xe1,
	0x81, 0xfe, 0xef, 0x5f, 0xa6, 0x54, 0xfc, 0x6c, 0xac, 0x4f, 0xb6, 0x8d, 0xff, 0xe7, 0x69, 0xb0,
	0x30, 0x2e, 0xfa, 0x77, 0x0b, 0x1e, 0x9a, 0x4e, 0xca, 0x78, 0x48, 0xde, 0x14, 0xaf, 0xf3, 0x0c,
	0x4c, 0x35, 0x1a, 0x39, 0xb7, 0xa0, 0x36, 0xdd, 0xc8, 0x05, 0xe8, 0xc8, 0xd1, 0x0d, 0x7d, 0x4c,
	0xb0, 0xd2, 0x64, 0xa3, 0x55, 0xfa, 0xb8, 0x98, 0xb5, 0xec, 0xde, 0x4e, 0x92, 0xbb, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x17, 0x11, 0xe2, 0x81, 0x94, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsensusServiceClient is the client API for ConsensusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsensusServiceClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Receive a signed collection from an access node.
	SubmitCollection(ctx context.Context, in *SubmitCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Notify the security node that another has proposed a block.
	ProposeBlock(ctx context.Context, in *ProposeBlockRequest, opts ...grpc.CallOption) (*ProposeBlockResponse, error)
	// Update a block proposal to add new signatures.
	UpdateProposedBlock(ctx context.Context, in *UpdateProposedBlockRequest, opts ...grpc.CallOption) (*UpdateProposedBlockResponse, error)
	// Returns a block by hash
	GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	// Returns a block by height
	GetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	// Returns the finalized state transitions at the requested heights.
	GetFinalizedStateTransitions(ctx context.Context, in *GetFinalizedStateTransitionsRequest, opts ...grpc.CallOption) (*GetFinalizedStateTransitionsResponse, error)
	// Process state transition proposal from other security node.
	ProcessStateTransitionProposal(ctx context.Context, in *shared.SignedStateTransition, opts ...grpc.CallOption) (*empty.Empty, error)
	// Process state transition prepare vote from other security node.
	ProcessStateTransitionPrepareVote(ctx context.Context, in *ProcessSignedStateTransitionPrepareVoteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Process state transition commit vote from other security node.
	ProcessStateTransitionCommitVote(ctx context.Context, in *ProcessSignedStateTransitionCommitVoteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type consensusServiceClient struct {
	cc *grpc.ClientConn
}

func NewConsensusServiceClient(cc *grpc.ClientConn) ConsensusServiceClient {
	return &consensusServiceClient{cc}
}

func (c *consensusServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) SubmitCollection(ctx context.Context, in *SubmitCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/SubmitCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) ProposeBlock(ctx context.Context, in *ProposeBlockRequest, opts ...grpc.CallOption) (*ProposeBlockResponse, error) {
	out := new(ProposeBlockResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/ProposeBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) UpdateProposedBlock(ctx context.Context, in *UpdateProposedBlockRequest, opts ...grpc.CallOption) (*UpdateProposedBlockResponse, error) {
	out := new(UpdateProposedBlockResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/UpdateProposedBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) GetBlockByHeight(ctx context.Context, in *GetBlockByHeightRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/GetBlockByHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) GetFinalizedStateTransitions(ctx context.Context, in *GetFinalizedStateTransitionsRequest, opts ...grpc.CallOption) (*GetFinalizedStateTransitionsResponse, error) {
	out := new(GetFinalizedStateTransitionsResponse)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/GetFinalizedStateTransitions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) ProcessStateTransitionProposal(ctx context.Context, in *shared.SignedStateTransition, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) ProcessStateTransitionPrepareVote(ctx context.Context, in *ProcessSignedStateTransitionPrepareVoteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionPrepareVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *consensusServiceClient) ProcessStateTransitionCommitVote(ctx context.Context, in *ProcessSignedStateTransitionCommitVoteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionCommitVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsensusServiceServer is the server API for ConsensusService service.
type ConsensusServiceServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Receive a signed collection from an access node.
	SubmitCollection(context.Context, *SubmitCollectionRequest) (*empty.Empty, error)
	// Notify the security node that another has proposed a block.
	ProposeBlock(context.Context, *ProposeBlockRequest) (*ProposeBlockResponse, error)
	// Update a block proposal to add new signatures.
	UpdateProposedBlock(context.Context, *UpdateProposedBlockRequest) (*UpdateProposedBlockResponse, error)
	// Returns a block by hash
	GetBlockByHash(context.Context, *GetBlockByHashRequest) (*GetBlockResponse, error)
	// Returns a block by height
	GetBlockByHeight(context.Context, *GetBlockByHeightRequest) (*GetBlockResponse, error)
	// Returns the finalized state transitions at the requested heights.
	GetFinalizedStateTransitions(context.Context, *GetFinalizedStateTransitionsRequest) (*GetFinalizedStateTransitionsResponse, error)
	// Process state transition proposal from other security node.
	ProcessStateTransitionProposal(context.Context, *shared.SignedStateTransition) (*empty.Empty, error)
	// Process state transition prepare vote from other security node.
	ProcessStateTransitionPrepareVote(context.Context, *ProcessSignedStateTransitionPrepareVoteRequest) (*empty.Empty, error)
	// Process state transition commit vote from other security node.
	ProcessStateTransitionCommitVote(context.Context, *ProcessSignedStateTransitionCommitVoteRequest) (*empty.Empty, error)
}

// UnimplementedConsensusServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConsensusServiceServer struct {
}

func (*UnimplementedConsensusServiceServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedConsensusServiceServer) SubmitCollection(ctx context.Context, req *SubmitCollectionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitCollection not implemented")
}
func (*UnimplementedConsensusServiceServer) ProposeBlock(ctx context.Context, req *ProposeBlockRequest) (*ProposeBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeBlock not implemented")
}
func (*UnimplementedConsensusServiceServer) UpdateProposedBlock(ctx context.Context, req *UpdateProposedBlockRequest) (*UpdateProposedBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProposedBlock not implemented")
}
func (*UnimplementedConsensusServiceServer) GetBlockByHash(ctx context.Context, req *GetBlockByHashRequest) (*GetBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedConsensusServiceServer) GetBlockByHeight(ctx context.Context, req *GetBlockByHeightRequest) (*GetBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHeight not implemented")
}
func (*UnimplementedConsensusServiceServer) GetFinalizedStateTransitions(ctx context.Context, req *GetFinalizedStateTransitionsRequest) (*GetFinalizedStateTransitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFinalizedStateTransitions not implemented")
}
func (*UnimplementedConsensusServiceServer) ProcessStateTransitionProposal(ctx context.Context, req *shared.SignedStateTransition) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessStateTransitionProposal not implemented")
}
func (*UnimplementedConsensusServiceServer) ProcessStateTransitionPrepareVote(ctx context.Context, req *ProcessSignedStateTransitionPrepareVoteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessStateTransitionPrepareVote not implemented")
}
func (*UnimplementedConsensusServiceServer) ProcessStateTransitionCommitVote(ctx context.Context, req *ProcessSignedStateTransitionCommitVoteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessStateTransitionCommitVote not implemented")
}

func RegisterConsensusServiceServer(s *grpc.Server, srv ConsensusServiceServer) {
	s.RegisterService(&_ConsensusService_serviceDesc, srv)
}

func _ConsensusService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_SubmitCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).SubmitCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/SubmitCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).SubmitCollection(ctx, req.(*SubmitCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_ProposeBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposeBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).ProposeBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/ProposeBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).ProposeBlock(ctx, req.(*ProposeBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_UpdateProposedBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProposedBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).UpdateProposedBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/UpdateProposedBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).UpdateProposedBlock(ctx, req.(*UpdateProposedBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).GetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_GetBlockByHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).GetBlockByHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/GetBlockByHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).GetBlockByHeight(ctx, req.(*GetBlockByHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_GetFinalizedStateTransitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFinalizedStateTransitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).GetFinalizedStateTransitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/GetFinalizedStateTransitions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).GetFinalizedStateTransitions(ctx, req.(*GetFinalizedStateTransitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_ProcessStateTransitionProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(shared.SignedStateTransition)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).ProcessStateTransitionProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).ProcessStateTransitionProposal(ctx, req.(*shared.SignedStateTransition))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_ProcessStateTransitionPrepareVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessSignedStateTransitionPrepareVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).ProcessStateTransitionPrepareVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionPrepareVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).ProcessStateTransitionPrepareVote(ctx, req.(*ProcessSignedStateTransitionPrepareVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConsensusService_ProcessStateTransitionCommitVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessSignedStateTransitionCommitVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsensusServiceServer).ProcessStateTransitionCommitVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bamboo.services.consensus.ConsensusService/ProcessStateTransitionCommitVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsensusServiceServer).ProcessStateTransitionCommitVote(ctx, req.(*ProcessSignedStateTransitionCommitVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsensusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bamboo.services.consensus.ConsensusService",
	HandlerType: (*ConsensusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ConsensusService_Ping_Handler,
		},
		{
			MethodName: "SubmitCollection",
			Handler:    _ConsensusService_SubmitCollection_Handler,
		},
		{
			MethodName: "ProposeBlock",
			Handler:    _ConsensusService_ProposeBlock_Handler,
		},
		{
			MethodName: "UpdateProposedBlock",
			Handler:    _ConsensusService_UpdateProposedBlock_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _ConsensusService_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetBlockByHeight",
			Handler:    _ConsensusService_GetBlockByHeight_Handler,
		},
		{
			MethodName: "GetFinalizedStateTransitions",
			Handler:    _ConsensusService_GetFinalizedStateTransitions_Handler,
		},
		{
			MethodName: "ProcessStateTransitionProposal",
			Handler:    _ConsensusService_ProcessStateTransitionProposal_Handler,
		},
		{
			MethodName: "ProcessStateTransitionPrepareVote",
			Handler:    _ConsensusService_ProcessStateTransitionPrepareVote_Handler,
		},
		{
			MethodName: "ProcessStateTransitionCommitVote",
			Handler:    _ConsensusService_ProcessStateTransitionCommitVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/consensus/consensus.proto",
}
