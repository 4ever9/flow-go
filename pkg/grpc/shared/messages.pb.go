// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shared/messages.proto

package shared

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionStatus int32

const (
	TransactionStatus_STATUS_PENDING   TransactionStatus = 0
	TransactionStatus_STATUS_FINALIZED TransactionStatus = 1
	TransactionStatus_STATUS_REVERTED  TransactionStatus = 2
	TransactionStatus_STATUS_SEALED    TransactionStatus = 3
)

var TransactionStatus_name = map[int32]string{
	0: "STATUS_PENDING",
	1: "STATUS_FINALIZED",
	2: "STATUS_REVERTED",
	3: "STATUS_SEALED",
}

var TransactionStatus_value = map[string]int32{
	"STATUS_PENDING":   0,
	"STATUS_FINALIZED": 1,
	"STATUS_REVERTED":  2,
	"STATUS_SEALED":    3,
}

func (x TransactionStatus) String() string {
	return proto.EnumName(TransactionStatus_name, int32(x))
}

func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{0}
}

type Block struct {
	ChainID                string                  `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Height                 uint64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	PreviousBlockHash      []byte                  `protobuf:"bytes,3,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	Timestamp              *timestamp.Timestamp    `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SignedCollectionHashes []*SignedCollectionHash `protobuf:"bytes,5,rep,name=signedCollectionHashes,proto3" json:"signedCollectionHashes,omitempty"`
	BlockSeals             []*BlockSeal            `protobuf:"bytes,6,rep,name=blockSeals,proto3" json:"blockSeals,omitempty"`
	Signatures             [][]byte                `protobuf:"bytes,7,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{0}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *Block) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetPreviousBlockHash() []byte {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *Block) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Block) GetSignedCollectionHashes() []*SignedCollectionHash {
	if m != nil {
		return m.SignedCollectionHashes
	}
	return nil
}

func (m *Block) GetBlockSeals() []*BlockSeal {
	if m != nil {
		return m.BlockSeals
	}
	return nil
}

func (m *Block) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// When computation results for past blocks become available, a corresponding execution receipt
// (issued by execution nodes) and result approval (issued by access nodes) is issued.
//
// We want to persist the execution receipt (assuming the results are consistent) and
// the result approval in subsequent blocks. This step is called _sealing a block_.
//
// This is a sub-message for a block seal. This will allow us later to (optionally) seal
// multiple past blocks in one new block without revising the structure.
//
type BlockSeal struct {
	BlockHash                  []byte   `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	ExecutionReceiptHash       []byte   `protobuf:"bytes,2,opt,name=executionReceiptHash,proto3" json:"executionReceiptHash,omitempty"`
	ExecutionReceiptSignatures [][]byte `protobuf:"bytes,3,rep,name=executionReceiptSignatures,proto3" json:"executionReceiptSignatures,omitempty"`
	ResultApprovalSignatures   [][]byte `protobuf:"bytes,4,rep,name=resultApprovalSignatures,proto3" json:"resultApprovalSignatures,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *BlockSeal) Reset()         { *m = BlockSeal{} }
func (m *BlockSeal) String() string { return proto.CompactTextString(m) }
func (*BlockSeal) ProtoMessage()    {}
func (*BlockSeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{1}
}

func (m *BlockSeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSeal.Unmarshal(m, b)
}
func (m *BlockSeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSeal.Marshal(b, m, deterministic)
}
func (m *BlockSeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSeal.Merge(m, src)
}
func (m *BlockSeal) XXX_Size() int {
	return xxx_messageInfo_BlockSeal.Size(m)
}
func (m *BlockSeal) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSeal.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSeal proto.InternalMessageInfo

func (m *BlockSeal) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptHash() []byte {
	if m != nil {
		return m.ExecutionReceiptHash
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptSignatures() [][]byte {
	if m != nil {
		return m.ExecutionReceiptSignatures
	}
	return nil
}

func (m *BlockSeal) GetResultApprovalSignatures() [][]byte {
	if m != nil {
		return m.ResultApprovalSignatures
	}
	return nil
}

type IntermediateRegisters struct {
	TransactionHash []byte `protobuf:"bytes,1,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	// the register changes at the end of computing the transaction
	Registers            []*Register `protobuf:"bytes,2,rep,name=registers,proto3" json:"registers,omitempty"`
	ComputeUsed          uint64      `protobuf:"varint,3,opt,name=computeUsed,proto3" json:"computeUsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IntermediateRegisters) Reset()         { *m = IntermediateRegisters{} }
func (m *IntermediateRegisters) String() string { return proto.CompactTextString(m) }
func (*IntermediateRegisters) ProtoMessage()    {}
func (*IntermediateRegisters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{2}
}

func (m *IntermediateRegisters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntermediateRegisters.Unmarshal(m, b)
}
func (m *IntermediateRegisters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntermediateRegisters.Marshal(b, m, deterministic)
}
func (m *IntermediateRegisters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntermediateRegisters.Merge(m, src)
}
func (m *IntermediateRegisters) XXX_Size() int {
	return xxx_messageInfo_IntermediateRegisters.Size(m)
}
func (m *IntermediateRegisters) XXX_DiscardUnknown() {
	xxx_messageInfo_IntermediateRegisters.DiscardUnknown(m)
}

var xxx_messageInfo_IntermediateRegisters proto.InternalMessageInfo

func (m *IntermediateRegisters) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *IntermediateRegisters) GetRegisters() []*Register {
	if m != nil {
		return m.Registers
	}
	return nil
}

func (m *IntermediateRegisters) GetComputeUsed() uint64 {
	if m != nil {
		return m.ComputeUsed
	}
	return 0
}

// Generated by each execution node individually; submitted to access nodes.
type ExecutionReceipt struct {
	PreviousReceiptHash       []byte                   `protobuf:"bytes,1,opt,name=previousReceiptHash,proto3" json:"previousReceiptHash,omitempty"`
	BlockHash                 []byte                   `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	InitialRegisters          []*Register              `protobuf:"bytes,3,rep,name=initialRegisters,proto3" json:"initialRegisters,omitempty"`
	IntermediateRegistersList []*IntermediateRegisters `protobuf:"bytes,4,rep,name=intermediateRegistersList,proto3" json:"intermediateRegistersList,omitempty"`
	Signatures                [][]byte                 `protobuf:"bytes,5,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *ExecutionReceipt) Reset()         { *m = ExecutionReceipt{} }
func (m *ExecutionReceipt) String() string { return proto.CompactTextString(m) }
func (*ExecutionReceipt) ProtoMessage()    {}
func (*ExecutionReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{3}
}

func (m *ExecutionReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionReceipt.Unmarshal(m, b)
}
func (m *ExecutionReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionReceipt.Marshal(b, m, deterministic)
}
func (m *ExecutionReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionReceipt.Merge(m, src)
}
func (m *ExecutionReceipt) XXX_Size() int {
	return xxx_messageInfo_ExecutionReceipt.Size(m)
}
func (m *ExecutionReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionReceipt proto.InternalMessageInfo

func (m *ExecutionReceipt) GetPreviousReceiptHash() []byte {
	if m != nil {
		return m.PreviousReceiptHash
	}
	return nil
}

func (m *ExecutionReceipt) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ExecutionReceipt) GetInitialRegisters() []*Register {
	if m != nil {
		return m.InitialRegisters
	}
	return nil
}

func (m *ExecutionReceipt) GetIntermediateRegistersList() []*IntermediateRegisters {
	if m != nil {
		return m.IntermediateRegistersList
	}
	return nil
}

func (m *ExecutionReceipt) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// Issued by the access nodes once they agree with the values
// for the computation that they were assigned to check.
type ResultApproval struct {
	BlockHeight             uint64   `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	ExecutionReceiptHash    []byte   `protobuf:"bytes,2,opt,name=executionReceiptHash,proto3" json:"executionReceiptHash,omitempty"`
	ResultApprovalSignature []byte   `protobuf:"bytes,3,opt,name=resultApprovalSignature,proto3" json:"resultApprovalSignature,omitempty"`
	Proof                   uint64   `protobuf:"varint,4,opt,name=proof,proto3" json:"proof,omitempty"`
	Signature               []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ResultApproval) Reset()         { *m = ResultApproval{} }
func (m *ResultApproval) String() string { return proto.CompactTextString(m) }
func (*ResultApproval) ProtoMessage()    {}
func (*ResultApproval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{4}
}

func (m *ResultApproval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultApproval.Unmarshal(m, b)
}
func (m *ResultApproval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultApproval.Marshal(b, m, deterministic)
}
func (m *ResultApproval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultApproval.Merge(m, src)
}
func (m *ResultApproval) XXX_Size() int {
	return xxx_messageInfo_ResultApproval.Size(m)
}
func (m *ResultApproval) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultApproval.DiscardUnknown(m)
}

var xxx_messageInfo_ResultApproval proto.InternalMessageInfo

func (m *ResultApproval) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ResultApproval) GetExecutionReceiptHash() []byte {
	if m != nil {
		return m.ExecutionReceiptHash
	}
	return nil
}

func (m *ResultApproval) GetResultApprovalSignature() []byte {
	if m != nil {
		return m.ResultApprovalSignature
	}
	return nil
}

func (m *ResultApproval) GetProof() uint64 {
	if m != nil {
		return m.Proof
	}
	return 0
}

func (m *ResultApproval) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Register struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Register) Reset()         { *m = Register{} }
func (m *Register) String() string { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()    {}
func (*Register) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{5}
}

func (m *Register) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Register.Unmarshal(m, b)
}
func (m *Register) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Register.Marshal(b, m, deterministic)
}
func (m *Register) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Register.Merge(m, src)
}
func (m *Register) XXX_Size() int {
	return xxx_messageInfo_Register.Size(m)
}
func (m *Register) XXX_DiscardUnknown() {
	xxx_messageInfo_Register.DiscardUnknown(m)
}

var xxx_messageInfo_Register proto.InternalMessageInfo

func (m *Register) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Register) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type AccountSignature struct {
	Account              []byte   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountSignature) Reset()         { *m = AccountSignature{} }
func (m *AccountSignature) String() string { return proto.CompactTextString(m) }
func (*AccountSignature) ProtoMessage()    {}
func (*AccountSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{6}
}

func (m *AccountSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountSignature.Unmarshal(m, b)
}
func (m *AccountSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountSignature.Marshal(b, m, deterministic)
}
func (m *AccountSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSignature.Merge(m, src)
}
func (m *AccountSignature) XXX_Size() int {
	return xxx_messageInfo_AccountSignature.Size(m)
}
func (m *AccountSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSignature.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSignature proto.InternalMessageInfo

func (m *AccountSignature) GetAccount() []byte {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountSignature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type SignedTransaction struct {
	Script               []byte               `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Nonce                uint64               `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ComputeLimit         uint64               `protobuf:"varint,3,opt,name=compute_limit,json=computeLimit,proto3" json:"compute_limit,omitempty"`
	ComputeUsed          uint64               `protobuf:"varint,4,opt,name=compute_used,json=computeUsed,proto3" json:"compute_used,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PayerSignature       *AccountSignature    `protobuf:"bytes,6,opt,name=payer_signature,json=payerSignature,proto3" json:"payer_signature,omitempty"`
	ScriptSignatures     []*AccountSignature  `protobuf:"bytes,7,rep,name=script_signatures,json=scriptSignatures,proto3" json:"script_signatures,omitempty"`
	Status               TransactionStatus    `protobuf:"varint,8,opt,name=status,proto3,enum=bamboo.shared.messages.TransactionStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SignedTransaction) Reset()         { *m = SignedTransaction{} }
func (m *SignedTransaction) String() string { return proto.CompactTextString(m) }
func (*SignedTransaction) ProtoMessage()    {}
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{7}
}

func (m *SignedTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedTransaction.Unmarshal(m, b)
}
func (m *SignedTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedTransaction.Marshal(b, m, deterministic)
}
func (m *SignedTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedTransaction.Merge(m, src)
}
func (m *SignedTransaction) XXX_Size() int {
	return xxx_messageInfo_SignedTransaction.Size(m)
}
func (m *SignedTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_SignedTransaction proto.InternalMessageInfo

func (m *SignedTransaction) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *SignedTransaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *SignedTransaction) GetComputeLimit() uint64 {
	if m != nil {
		return m.ComputeLimit
	}
	return 0
}

func (m *SignedTransaction) GetComputeUsed() uint64 {
	if m != nil {
		return m.ComputeUsed
	}
	return 0
}

func (m *SignedTransaction) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SignedTransaction) GetPayerSignature() *AccountSignature {
	if m != nil {
		return m.PayerSignature
	}
	return nil
}

func (m *SignedTransaction) GetScriptSignatures() []*AccountSignature {
	if m != nil {
		return m.ScriptSignatures
	}
	return nil
}

func (m *SignedTransaction) GetStatus() TransactionStatus {
	if m != nil {
		return m.Status
	}
	return TransactionStatus_STATUS_PENDING
}

type Collection struct {
	Transactions         []*SignedTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	FoundationBlockHash  []byte               `protobuf:"bytes,2,opt,name=foundationBlockHash,proto3" json:"foundationBlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Collection) Reset()         { *m = Collection{} }
func (m *Collection) String() string { return proto.CompactTextString(m) }
func (*Collection) ProtoMessage()    {}
func (*Collection) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{8}
}

func (m *Collection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Collection.Unmarshal(m, b)
}
func (m *Collection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Collection.Marshal(b, m, deterministic)
}
func (m *Collection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Collection.Merge(m, src)
}
func (m *Collection) XXX_Size() int {
	return xxx_messageInfo_Collection.Size(m)
}
func (m *Collection) XXX_DiscardUnknown() {
	xxx_messageInfo_Collection.DiscardUnknown(m)
}

var xxx_messageInfo_Collection proto.InternalMessageInfo

func (m *Collection) GetTransactions() []*SignedTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Collection) GetFoundationBlockHash() []byte {
	if m != nil {
		return m.FoundationBlockHash
	}
	return nil
}

type SignedCollectionHash struct {
	CollectionHash       []byte   `protobuf:"bytes,1,opt,name=collectionHash,proto3" json:"collectionHash,omitempty"`
	Signatures           [][]byte `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedCollectionHash) Reset()         { *m = SignedCollectionHash{} }
func (m *SignedCollectionHash) String() string { return proto.CompactTextString(m) }
func (*SignedCollectionHash) ProtoMessage()    {}
func (*SignedCollectionHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{9}
}

func (m *SignedCollectionHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedCollectionHash.Unmarshal(m, b)
}
func (m *SignedCollectionHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedCollectionHash.Marshal(b, m, deterministic)
}
func (m *SignedCollectionHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedCollectionHash.Merge(m, src)
}
func (m *SignedCollectionHash) XXX_Size() int {
	return xxx_messageInfo_SignedCollectionHash.Size(m)
}
func (m *SignedCollectionHash) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedCollectionHash.DiscardUnknown(m)
}

var xxx_messageInfo_SignedCollectionHash proto.InternalMessageInfo

func (m *SignedCollectionHash) GetCollectionHash() []byte {
	if m != nil {
		return m.CollectionHash
	}
	return nil
}

func (m *SignedCollectionHash) GetSignatures() [][]byte {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func init() {
	proto.RegisterEnum("bamboo.shared.messages.TransactionStatus", TransactionStatus_name, TransactionStatus_value)
	proto.RegisterType((*Block)(nil), "bamboo.shared.messages.Block")
	proto.RegisterType((*BlockSeal)(nil), "bamboo.shared.messages.BlockSeal")
	proto.RegisterType((*IntermediateRegisters)(nil), "bamboo.shared.messages.IntermediateRegisters")
	proto.RegisterType((*ExecutionReceipt)(nil), "bamboo.shared.messages.ExecutionReceipt")
	proto.RegisterType((*ResultApproval)(nil), "bamboo.shared.messages.ResultApproval")
	proto.RegisterType((*Register)(nil), "bamboo.shared.messages.Register")
	proto.RegisterType((*AccountSignature)(nil), "bamboo.shared.messages.AccountSignature")
	proto.RegisterType((*SignedTransaction)(nil), "bamboo.shared.messages.SignedTransaction")
	proto.RegisterType((*Collection)(nil), "bamboo.shared.messages.Collection")
	proto.RegisterType((*SignedCollectionHash)(nil), "bamboo.shared.messages.SignedCollectionHash")
}

func init() { proto.RegisterFile("shared/messages.proto", fileDescriptor_e57dabda91f43ef4) }

var fileDescriptor_e57dabda91f43ef4 = []byte{
	// 862 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5d, 0x8e, 0xe3, 0x44,
	0x10, 0xc6, 0xce, 0xcf, 0x4e, 0x6a, 0x66, 0x33, 0x4e, 0xef, 0xec, 0x60, 0x46, 0x08, 0xbc, 0x41,
	0x42, 0x5e, 0xb4, 0x64, 0x56, 0xe1, 0x65, 0xc5, 0xc3, 0x4a, 0x09, 0x09, 0x10, 0x14, 0x46, 0xd0,
	0xc9, 0xf0, 0xb0, 0x0f, 0x44, 0x1d, 0xa7, 0x27, 0x69, 0xad, 0xe3, 0xb6, 0xdc, 0xed, 0x11, 0x1c,
	0x82, 0x53, 0x70, 0x01, 0x2e, 0xc0, 0x2d, 0x78, 0xe1, 0x0a, 0x9c, 0x02, 0xb9, 0xdd, 0x8e, 0x1d,
	0x27, 0x5e, 0x31, 0x3c, 0xd6, 0x57, 0x5d, 0x9f, 0xab, 0xbf, 0xaa, 0xfe, 0x0c, 0x4f, 0xc5, 0x86,
	0x44, 0x74, 0x75, 0xbd, 0xa5, 0x42, 0x90, 0x35, 0x15, 0xbd, 0x30, 0xe2, 0x92, 0xa3, 0xcb, 0x25,
	0xd9, 0x2e, 0x39, 0xef, 0xa5, 0xd9, 0x5e, 0x96, 0xbd, 0xfa, 0x78, 0xcd, 0xf9, 0xda, 0xa7, 0xd7,
	0xea, 0xd4, 0x32, 0xbe, 0xbb, 0x96, 0x6c, 0x4b, 0x85, 0x24, 0xdb, 0x30, 0x2d, 0xec, 0xfe, 0x63,
	0x42, 0x63, 0xe8, 0x73, 0xef, 0x2d, 0xb2, 0xe1, 0x91, 0xb7, 0x21, 0x2c, 0x98, 0x8c, 0x6c, 0xc3,
	0x31, 0xdc, 0x16, 0xce, 0x42, 0x74, 0x09, 0xcd, 0x0d, 0x65, 0xeb, 0x8d, 0xb4, 0x4d, 0xc7, 0x70,
	0xeb, 0x58, 0x47, 0xe8, 0x05, 0x74, 0xc2, 0x88, 0xde, 0x33, 0x1e, 0x0b, 0x45, 0xf1, 0x2d, 0x11,
	0x1b, 0xbb, 0xe6, 0x18, 0xee, 0x19, 0x3e, 0x4c, 0xa0, 0x57, 0xd0, 0xda, 0x7d, 0xdc, 0xae, 0x3b,
	0x86, 0x7b, 0xda, 0xbf, 0xea, 0xa5, 0xed, 0xf5, 0xb2, 0xf6, 0x7a, 0xf3, 0xec, 0x04, 0xce, 0x0f,
	0xa3, 0x15, 0x5c, 0x0a, 0xb6, 0x0e, 0xe8, 0xea, 0x2b, 0xee, 0xfb, 0xd4, 0x93, 0x8c, 0x07, 0x09,
	0x23, 0x15, 0x76, 0xc3, 0xa9, 0xb9, 0xa7, 0xfd, 0x17, 0xbd, 0xe3, 0xb7, 0xef, 0xcd, 0x8e, 0x54,
	0xe1, 0x0a, 0x2e, 0x34, 0x00, 0x58, 0x26, 0xcd, 0xce, 0x28, 0xf1, 0x85, 0xdd, 0x54, 0xcc, 0xcf,
	0xaa, 0x98, 0x87, 0xd9, 0x49, 0x5c, 0x28, 0x42, 0x1f, 0x01, 0x24, 0xe4, 0x44, 0xc6, 0x11, 0x15,
	0xf6, 0x23, 0xa7, 0xe6, 0x9e, 0xe1, 0x02, 0xd2, 0xfd, 0xdb, 0x80, 0xd6, 0xae, 0x12, 0x7d, 0x08,
	0xad, 0xe5, 0x4e, 0x36, 0x43, 0xc9, 0x96, 0x03, 0xa8, 0x0f, 0x17, 0xf4, 0x17, 0xea, 0xc5, 0x49,
	0x87, 0x98, 0x7a, 0x94, 0x85, 0x52, 0x1d, 0x34, 0xd5, 0xc1, 0xa3, 0x39, 0xf4, 0x1a, 0xae, 0xca,
	0xf8, 0x2c, 0xef, 0xa7, 0xa6, 0xfa, 0x79, 0xc7, 0x09, 0xf4, 0x25, 0xd8, 0x11, 0x15, 0xb1, 0x2f,
	0x07, 0x61, 0x18, 0xf1, 0x7b, 0xe2, 0x17, 0xaa, 0xeb, 0xaa, 0xba, 0x32, 0xdf, 0xfd, 0xdd, 0x80,
	0xa7, 0x93, 0x40, 0xd2, 0x68, 0x4b, 0x57, 0x8c, 0x48, 0x8a, 0xe9, 0x9a, 0x09, 0x49, 0x23, 0x81,
	0x5c, 0x38, 0x97, 0x11, 0x09, 0x04, 0xd9, 0xa9, 0xad, 0x6f, 0x5b, 0x86, 0xd1, 0x6b, 0x68, 0x45,
	0x59, 0x99, 0x6d, 0xaa, 0x09, 0x38, 0x55, 0x13, 0xc8, 0xf8, 0x71, 0x5e, 0x82, 0x1c, 0x38, 0xf5,
	0xf8, 0x36, 0x8c, 0x25, 0xbd, 0x15, 0x74, 0xa5, 0x56, 0xb1, 0x8e, 0x8b, 0x50, 0xf7, 0x4f, 0x13,
	0xac, 0x71, 0x49, 0x00, 0xf4, 0x12, 0x9e, 0x64, 0xeb, 0x5a, 0x54, 0x3a, 0x6d, 0xf2, 0x58, 0x6a,
	0x7f, 0x74, 0x66, 0x79, 0x74, 0x53, 0xb0, 0x58, 0xc0, 0x24, 0x23, 0xfe, 0x4e, 0x04, 0x25, 0xfe,
	0x7f, 0xb9, 0xcd, 0x41, 0x25, 0x7a, 0x0b, 0x1f, 0xb0, 0x63, 0xba, 0x4e, 0x99, 0x90, 0x6a, 0x2a,
	0xa7, 0xfd, 0xcf, 0xab, 0x68, 0x8f, 0x0e, 0x04, 0x57, 0xf3, 0x95, 0x36, 0xb8, 0x71, 0xb0, 0xc1,
	0x7f, 0x19, 0xd0, 0xc6, 0x7b, 0x2b, 0x90, 0x88, 0x9e, 0x5e, 0x3d, 0xb5, 0x08, 0x23, 0x15, 0xbd,
	0x00, 0xfd, 0xaf, 0x55, 0x7e, 0x05, 0xef, 0x57, 0xac, 0x9a, 0x76, 0x98, 0xaa, 0x34, 0xba, 0x80,
	0x46, 0x18, 0x71, 0x7e, 0xa7, 0x3c, 0xa6, 0x8e, 0xd3, 0x20, 0x99, 0xd8, 0xee, 0x1a, 0x76, 0x23,
	0x9d, 0xd8, 0x0e, 0xe8, 0xbe, 0x84, 0x93, 0x4c, 0x07, 0xd4, 0x06, 0x93, 0xad, 0xf4, 0xf0, 0x4d,
	0xb6, 0x4a, 0xf8, 0xee, 0x89, 0x1f, 0x53, 0xdd, 0x6e, 0x1a, 0x74, 0xbf, 0x03, 0x6b, 0xe0, 0x79,
	0x3c, 0x0e, 0xf2, 0xf7, 0x93, 0x38, 0x28, 0x49, 0x31, 0x5d, 0x9e, 0x85, 0xfb, 0x5f, 0x37, 0xcb,
	0x5f, 0xff, 0xa3, 0x06, 0x9d, 0xd4, 0xaa, 0xe6, 0xf9, 0x83, 0x48, 0x5c, 0x57, 0x78, 0x11, 0x0b,
	0x33, 0x32, 0x1d, 0x25, 0xfd, 0x04, 0x3c, 0xf0, 0xa8, 0x36, 0xe3, 0x34, 0x40, 0x9f, 0xc0, 0x63,
	0xbd, 0xe7, 0x0b, 0x9f, 0x6d, 0x99, 0xd4, 0xcb, 0x7f, 0xa6, 0xc1, 0x69, 0x82, 0xa1, 0x67, 0x90,
	0xc5, 0x8b, 0x38, 0x79, 0x20, 0xf5, 0x83, 0x07, 0xb2, 0xef, 0xd2, 0x8d, 0x87, 0xb8, 0xf4, 0x8f,
	0x70, 0x1e, 0x92, 0x5f, 0x69, 0xb4, 0xc8, 0x6f, 0xda, 0x54, 0xf5, 0x6e, 0xd5, 0x76, 0x96, 0x05,
	0xc4, 0x6d, 0x45, 0x90, 0x0b, 0x7a, 0x0b, 0x9d, 0xf4, 0xd2, 0x8b, 0x92, 0xad, 0x3e, 0x84, 0xd4,
	0x4a, 0x29, 0x0a, 0x36, 0x37, 0x80, 0xa6, 0x90, 0x44, 0xc6, 0xc2, 0x3e, 0x71, 0x0c, 0xb7, 0xdd,
	0x7f, 0x5e, 0xc5, 0x55, 0x18, 0xc7, 0x4c, 0x15, 0x60, 0x5d, 0xd8, 0xfd, 0xcd, 0x00, 0xc8, 0xff,
	0x20, 0xe8, 0x7b, 0x38, 0x2b, 0x78, 0x99, 0xb0, 0x0d, 0xd5, 0xe3, 0xf3, 0x77, 0xff, 0x97, 0x0a,
	0xec, 0x78, 0xaf, 0x3c, 0x31, 0xa4, 0x3b, 0x1e, 0x07, 0x2b, 0x92, 0x84, 0xc3, 0x92, 0xd1, 0x1c,
	0x4b, 0x75, 0x7f, 0x86, 0x8b, 0x63, 0x3f, 0x3b, 0xf4, 0x29, 0xb4, 0xbd, 0x3d, 0x44, 0x2f, 0x53,
	0x09, 0x2d, 0xbd, 0x7b, 0xb3, 0xfc, 0xee, 0x3f, 0xa3, 0xd0, 0x39, 0x10, 0x03, 0x21, 0x68, 0xcf,
	0xe6, 0x83, 0xf9, 0xed, 0x6c, 0xf1, 0xc3, 0xf8, 0x66, 0x34, 0xb9, 0xf9, 0xc6, 0x7a, 0x0f, 0x5d,
	0x80, 0xa5, 0xb1, 0xaf, 0x27, 0x37, 0x83, 0xe9, 0xe4, 0xcd, 0x78, 0x64, 0x19, 0xe8, 0x09, 0x9c,
	0x6b, 0x14, 0x8f, 0x7f, 0x1a, 0xe3, 0xf9, 0x78, 0x64, 0x99, 0xa8, 0x03, 0x8f, 0x35, 0x38, 0x1b,
	0x0f, 0xa6, 0xe3, 0x91, 0x55, 0x1b, 0x9e, 0xbc, 0x69, 0xa6, 0x5a, 0x2d, 0x9b, 0x6a, 0xd9, 0xbe,
	0xf8, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x1d, 0x42, 0xdd, 0xf0, 0x08, 0x00, 0x00,
}
