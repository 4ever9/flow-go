// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import flow "github.com/dapperlabs/flow-go/model/flow"
import ledger "github.com/dapperlabs/flow-go/storage/ledger"
import mock "github.com/stretchr/testify/mock"

// State is an autogenerated mock type for the State type
type State struct {
	mock.Mock
}

// CommitDelta provides a mock function with given fields: _a0
func (_m *State) CommitDelta(_a0 ledger.Delta) (flow.StateCommitment, error) {
	ret := _m.Called(_a0)

	var r0 flow.StateCommitment
	if rf, ok := ret.Get(0).(func(ledger.Delta) flow.StateCommitment); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(flow.StateCommitment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ledger.Delta) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewView provides a mock function with given fields: _a0
func (_m *State) NewView(_a0 flow.StateCommitment) *ledger.View {
	ret := _m.Called(_a0)

	var r0 *ledger.View
	if rf, ok := ret.Get(0).(func(flow.StateCommitment) *ledger.View); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ledger.View)
		}
	}

	return r0
}
