// Code generated by mockery v1.0.0. DO NOT EDIT.

package mock

import computer "github.com/dapperlabs/flow-go/engine/execution/execution/components/computer"
import flow "github.com/dapperlabs/flow-go/model/flow"
import ledger "github.com/dapperlabs/flow-go/engine/execution/execution/modules/ledger"
import mock "github.com/stretchr/testify/mock"

// Computer is an autogenerated mock type for the Computer type
type Computer struct {
	mock.Mock
}

// ExecuteTransaction provides a mock function with given fields: _a0, tx
func (_m *Computer) ExecuteTransaction(_a0 *ledger.View, tx *flow.Transaction) (*computer.TransactionResult, error) {
	ret := _m.Called(_a0, tx)

	var r0 *computer.TransactionResult
	if rf, ok := ret.Get(0).(func(*ledger.View, *flow.Transaction) *computer.TransactionResult); ok {
		r0 = rf(_a0, tx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*computer.TransactionResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ledger.View, *flow.Transaction) error); ok {
		r1 = rf(_a0, tx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
